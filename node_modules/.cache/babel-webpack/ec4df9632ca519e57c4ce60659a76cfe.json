{"ast":null,"code":"import _toConsumableArray from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n    }));\n  }\n  return new Observable(function (subscriber) {\n    var handler = function handler() {\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n    var retValue;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromEventPattern.ts"],"names":[],"mappings":";AAAA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,OAAO,QAAQ,iBAAiB;AACzC,SAAS,UAAU,QAAQ,oBAAoB;AAE/C,SAAS,GAAG,QAAQ,kBAAkB;AAwItC,OAAM,SAAU,gBAAgB,CAAI,UAA8C,EAC9C,aAAiE,EACjE,cAAsC,EAAA;EAExE,IAAI,cAAc,EAAE;IAElB,OAAO,gBAAgB,CAAI,UAAU,EAAE,aAAa,CAAC,CAAC,IAAI,CACxD,GAAG,CAAC,UAAA,IAAI;MAAA,OAAI,OAAO,CAAC,IAAI,CAAC,GAAG,cAAc,kCAAI,IAAI,EAAC,GAAG,cAAc,CAAC,IAAI,CAAC;IAAA,EAAC,CAC5E;EACF;EAED,OAAO,IAAI,UAAU,CAAU,UAAA,UAAU,EAAG;IAC1C,IAAM,OAAO,GAAG,SAAV,OAAO;MAAA,kCAAO,CAAM;QAAN,CAAM;MAAA;MAAA,OAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAAA;IAEzE,IAAI,QAAa;IACjB,IAAI;MACF,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC;KAC/B,CAAC,OAAO,GAAG,EAAE;MACZ,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;MACrB,OAAO,SAAS;IACjB;IAED,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;MAC9B,OAAO,SAAS;IACjB;IAED,OAAO;MAAA,OAAM,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;IAAA;EAC/C,CAAC,CAAC;AACJ","sourcesContent":["import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map"]},"metadata":{},"sourceType":"module"}