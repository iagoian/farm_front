{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration) {\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : async;\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultThrottleConfig;\n  return function (source) {\n    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n  };\n}\nvar ThrottleTimeOperator = /*#__PURE__*/function () {\n  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n    _classCallCheck(this, ThrottleTimeOperator);\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  _createClass(ThrottleTimeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n  }]);\n  return ThrottleTimeOperator;\n}();\nvar ThrottleTimeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ThrottleTimeSubscriber, _Subscriber);\n  var _super = _createSuper(ThrottleTimeSubscriber);\n  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n    var _this;\n    _classCallCheck(this, ThrottleTimeSubscriber);\n    _this = _super.call(this, destination);\n    _this.duration = duration;\n    _this.scheduler = scheduler;\n    _this.leading = leading;\n    _this.trailing = trailing;\n    _this._hasTrailingValue = false;\n    _this._trailingValue = null;\n    return _this;\n  }\n  _createClass(ThrottleTimeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.throttled) {\n        if (this.trailing) {\n          this._trailingValue = value;\n          this._hasTrailingValue = true;\n        }\n      } else {\n        this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n          subscriber: this\n        }));\n        if (this.leading) {\n          this.destination.next(value);\n        } else if (this.trailing) {\n          this._trailingValue = value;\n          this._hasTrailingValue = true;\n        }\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      if (this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this.destination.complete();\n      } else {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"clearThrottle\",\n    value: function clearThrottle() {\n      var throttled = this.throttled;\n      if (throttled) {\n        if (this.trailing && this._hasTrailingValue) {\n          this.destination.next(this._trailingValue);\n          this._trailingValue = null;\n          this._hasTrailingValue = false;\n        }\n        throttled.unsubscribe();\n        this.remove(throttled);\n        this.throttled = null;\n      }\n    }\n  }]);\n  return ThrottleTimeSubscriber;\n}(Subscriber);\nfunction dispatchNext(arg) {\n  var subscriber = arg.subscriber;\n  subscriber.clearThrottle();\n}","map":{"version":3,"sources":["../../../src/internal/operators/throttleTime.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map"]},"metadata":{},"sourceType":"module"}