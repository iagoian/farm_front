{"ast":null,"code":"import _assertThisInitialized from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\nvar BufferToggleOperator = /*#__PURE__*/function () {\n  function BufferToggleOperator(openings, closingSelector) {\n    _classCallCheck(this, BufferToggleOperator);\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n  _createClass(BufferToggleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n  }]);\n  return BufferToggleOperator;\n}();\nvar BufferToggleSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(BufferToggleSubscriber, _OuterSubscriber);\n  var _super = _createSuper(BufferToggleSubscriber);\n  function BufferToggleSubscriber(destination, openings, closingSelector) {\n    var _this;\n    _classCallCheck(this, BufferToggleSubscriber);\n    _this = _super.call(this, destination);\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n    _this.add(subscribeToResult(_assertThisInitialized(_this), openings));\n    return _this;\n  }\n  _createClass(BufferToggleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var contexts = this.contexts;\n      var len = contexts.length;\n      for (var i = 0; i < len; i++) {\n        contexts[i].buffer.push(value);\n      }\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      var contexts = this.contexts;\n      while (contexts.length > 0) {\n        var context = contexts.shift();\n        context.subscription.unsubscribe();\n        context.buffer = null;\n        context.subscription = null;\n      }\n      this.contexts = null;\n      _get(_getPrototypeOf(BufferToggleSubscriber.prototype), \"_error\", this).call(this, err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var contexts = this.contexts;\n      while (contexts.length > 0) {\n        var context = contexts.shift();\n        this.destination.next(context.buffer);\n        context.subscription.unsubscribe();\n        context.buffer = null;\n        context.subscription = null;\n      }\n      this.contexts = null;\n      _get(_getPrototypeOf(BufferToggleSubscriber.prototype), \"_complete\", this).call(this);\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue) {\n      outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      this.closeBuffer(innerSub.context);\n    }\n  }, {\n    key: \"openBuffer\",\n    value: function openBuffer(value) {\n      try {\n        var closingSelector = this.closingSelector;\n        var closingNotifier = closingSelector.call(this, value);\n        if (closingNotifier) {\n          this.trySubscribe(closingNotifier);\n        }\n      } catch (err) {\n        this._error(err);\n      }\n    }\n  }, {\n    key: \"closeBuffer\",\n    value: function closeBuffer(context) {\n      var contexts = this.contexts;\n      if (contexts && context) {\n        var buffer = context.buffer,\n          subscription = context.subscription;\n        this.destination.next(buffer);\n        contexts.splice(contexts.indexOf(context), 1);\n        this.remove(subscription);\n        subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"trySubscribe\",\n    value: function trySubscribe(closingNotifier) {\n      var contexts = this.contexts;\n      var buffer = [];\n      var subscription = new Subscription();\n      var context = {\n        buffer: buffer,\n        subscription: subscription\n      };\n      contexts.push(context);\n      var innerSubscription = subscribeToResult(this, closingNotifier, context);\n      if (!innerSubscription || innerSubscription.closed) {\n        this.closeBuffer(context);\n      } else {\n        innerSubscription.context = context;\n        this.add(innerSubscription);\n        subscription.add(innerSubscription);\n      }\n    }\n  }]);\n  return BufferToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n//# sourceMappingURL=bufferToggle.js.map"]},"metadata":{},"sourceType":"module"}