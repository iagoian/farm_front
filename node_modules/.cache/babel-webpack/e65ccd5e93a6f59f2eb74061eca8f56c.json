{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport var Observable = /*#__PURE__*/function () {\n  function Observable(subscribe) {\n    _classCallCheck(this, Observable);\n    this._isScalar = false;\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  _createClass(Observable, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observerOrNext, error, complete) {\n      var operator = this.operator;\n      var sink = toSubscriber(observerOrNext, error, complete);\n      if (operator) {\n        sink.add(operator.call(sink, this.source));\n      } else {\n        sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n      }\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        if (sink.syncErrorThrowable) {\n          sink.syncErrorThrowable = false;\n          if (sink.syncErrorThrown) {\n            throw sink.syncErrorValue;\n          }\n        }\n      }\n      return sink;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          sink.syncErrorThrown = true;\n          sink.syncErrorValue = err;\n        }\n        if (canReportError(sink)) {\n          sink.error(err);\n        } else {\n          console.warn(err);\n        }\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(next, promiseCtor) {\n      var _this = this;\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var subscription;\n        subscription = _this.subscribe(function (value) {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            if (subscription) {\n              subscription.unsubscribe();\n            }\n          }\n        }, reject, resolve);\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var source = this.source;\n      return source && source.subscribe(subscriber);\n    }\n  }, {\n    key: Symbol_observable,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe() {\n      for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n        operations[_key] = arguments[_key];\n      }\n      if (operations.length === 0) {\n        return this;\n      }\n      return pipeFromArray(operations)(this);\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise(promiseCtor) {\n      var _this2 = this;\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var value;\n        _this2.subscribe(function (x) {\n          return value = x;\n        }, function (err) {\n          return reject(err);\n        }, function () {\n          return resolve(value);\n        });\n      });\n    }\n  }]);\n  return Observable;\n}();\nObservable.create = function (subscribe) {\n  return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n  return promiseCtor;\n}","map":{"version":3,"sources":["../../src/internal/Observable.ts"],"names":[],"mappings":"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","sourcesContent":["import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map"]},"metadata":{},"sourceType":"module"}