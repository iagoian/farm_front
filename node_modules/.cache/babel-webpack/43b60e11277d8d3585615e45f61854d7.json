{"ast":null,"code":"/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getIntersection, getWidth, isEmpty } from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport { assign } from '../../obj.js';\nimport { layerRendererConstructors } from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n  }\n  if (IntermediateCanvasRenderer) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create(IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype);\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform() {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */this.getLayer();\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */imageLayer.getSource();\n    var hints = frameState.viewHints;\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */assign({}, frameState, {\n          size: [getWidth(renderedExtent) / viewResolution, getHeight(renderedExtent) / viewResolution],\n          viewState: /** @type {import(\"../../View.js\").State} */assign({}, frameState.viewState, {\n            rotation: 0\n          })\n        });\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) && (vectorRenderer.replayGroupChanged || !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_, pixelRatio * size[0] / 2, pixelRatio * size[1] / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform, pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5], pixelRatio / viewResolution, -pixelRatio / viewResolution, 0, -viewCenter[0], -viewCenter[1]);\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer);\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.IMAGE || layer.getType() === LayerType.VECTOR && /** @type {import(\"../../layer/Vector.js\").default} */layer.getRenderMode() === VectorRenderType.IMAGE;\n};\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasImageLayerRenderer( /** @type {import(\"../../layer/Image.js\").default} */layer);\n};\nexport default CanvasImageLayerRenderer;","map":{"version":3,"sources":["../../../../src/ol/renderer/canvas/ImageLayer.js"],"names":["super","let","const"],"mappings":"AAAA;;;AAGA,SAAQ,0BAA0B,QAAO,wBAAwB;AACjE,OAAO,WAAW,MAAM,sBAAsB;AAC9C,OAAO,SAAS,MAAM,oBAAoB;AAC1C,OAAO,QAAQ,MAAM,mBAAmB;AACxC,SAAQ,MAAM,QAAO,gBAAgB;AACrC,SAAQ,SAAS,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,QAAO,iBAAiB;AAC7E,OAAO,gBAAgB,MAAM,iCAAiC;AAC9D,SAAQ,MAAM,QAAO,cAAc;AACnC,SAAQ,yBAAyB,QAAO,UAAU;AAClD,OAAO,0BAA0B,MAAM,yBAAyB;AAChE,SAAQ,MAAM,IAAI,eAAe,EAAE,OAAO,IAAI,gBAAgB,QAAO,oBAAoB;;;;;;;AAOzF,IAAM,wBAAwB,GAAmC,aAAA,UAAA,0BAAA,EAAA;EAK/D,SAAA,wBAAW,CAAC,UAAU,EAAE;IAEtBA,0BAAAA,CAAAA,IAAK,CAAA,IAAA,EAAC,UAAU,CAAC;;;;;;IAMjB,IAAI,CAAC,MAAM,GAAG,IAAI;;;;;;IAMlB,IAAI,CAAC,eAAe,GAAG,eAAe,EAAE;;;;;IAKxC,IAAI,CAAC,gBAAgB,GAAG,EAAE;;;;;;IAM1B,IAAI,CAAC,eAAe,GAAG,IAAI;IAE3B,IAAI,UAAU,CAAC,OAAO,EAAE,KAAK,SAAS,CAAC,MAAM,EAAE;MAC7C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,yBAAyB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAClEC,IAAM,IAAI,GAAG,yBAAyB,CAAC,CAAC,CAAC;QACzC,IAAI,IAAI,KAAK,wBAAwB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,EAAE;UACpE,IAAI,CAAC,eAAe,GAAA,iDAAsD,IAAI,IAAI,CAAC,UAAU,CAAE;UAC/F;QACD;MACF;IACF;;;;2EAEF;;;;;qCAKD,eAAA,GAAA,SAAA,eAAA,GAAkB;IAChB,IAAI,IAAI,CAAC,eAAe,EAAE;MACxB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;IAC/B;IACDF,0BAAAA,CAAAA,SAAK,CAAC,eAAA,CAAA,IAAe,CAAA,IAAC,CAAC;GACxB;;;;;qCAKD,QAAA,GAAA,SAAA,QAAA,GAAW;IACT,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;GACpD;;;;;qCAKD,iBAAA,GAAA,SAAA,iBAAA,GAAoB;IAClB,OAAO,IAAI,CAAC,eAAe;GAC5B;;;;;qCAKD,YAAA,GAAA,SAAA,YAAA,CAAa,UAAU,EAAE,UAAU,EAAE;IAEnCE,IAAM,UAAU,GAAG,UAAU,CAAC,UAAU;IACxCA,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI;IAC5BA,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS;IACtCA,IAAM,UAAU,GAAG,SAAS,CAAC,MAAM;IACnCA,IAAM,cAAc,GAAG,SAAS,CAAC,UAAU;IAE3CD,IAAI,KAAK;IACTC,IAAM,UAAU,GAAA,qDAA0D,IAAI,CAAC,QAAQ,EAAG;IAC1FA,IAAM,WAAW,GAAA,sDAA2D,UAAU,CAAC,SAAS,EAAG;IAEnGA,IAAM,KAAK,GAAG,UAAU,CAAC,SAAS;IAElCA,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe;IAC3CD,IAAI,cAAc,GAAG,UAAU,CAAC,MAAM;IACtC,IAAI,CAAC,cAAc,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;MACtD,cAAc,GAAG,eAAe,CAAC,cAAc,EAAE,UAAU,CAAC,MAAM,CAAC;IACpE;IAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAC1D,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;MAC5BA,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU;MACrC,IAAI,CAAC,0BAA0B,EAAE;QAC/BC,IAAM,gBAAgB,GAAG,WAAW,CAAC,aAAa,EAAE;QACpD,IAAI,gBAAgB,EAAE;UACpB,UAAU,GAAG,gBAAgB;QAC9B;MACF;MACDD,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB;MAC3C,IAAI,cAAc,EAAE;QAClBC,IAAM,OAAO,GAAG,cAAc,CAAC,OAAO;QACtCA,IAAM,eAAe,GAAA,yDAA8D,MAAM,CAAC,CAAA,CAAE,EAAE,UAAU,EAAE;UACxG,IAAI,EAAE,CACJ,QAAQ,CAAC,cAAc,CAAC,GAAG,cAAc,EACzC,SAAS,CAAC,cAAc,CAAC,GAAG,cAAc,CAC3C;UACD,SAAS,EAAA,4CAAgD,MAAM,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC,SAAS,EAAE;YACxF,QAAQ,EAAE;WACX;SACF,CAAE;QACHA,IAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE;QACjF,KAAK,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,EAAE,UAAS,QAAQ,EAAE;UACrG,IAAI,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,UAAU,CAAC,KACvD,cAAc,CAAC,kBAAkB,IAClC,CAAC,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,EAAE;YACjD,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU;YAC3D,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU;YAC5D,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,eAAe,EAAE,UAAU,CAAC;YAC5D,eAAe,GAAG,kBAAkB;YACpC,QAAQ,EAAE;UACX;SACF,CAAC;OACH,MAAM;QACL,KAAK,GAAG,WAAW,CAAC,QAAQ,CAC1B,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC;MAC1D;MACD,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;QAClC,IAAI,CAAC,MAAM,GAAG,KAAK;QACnB,IAAI,CAAC,gBAAgB,GAAG,eAAe;MACxC;IACF;IAED,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,KAAK,GAAG,IAAI,CAAC,MAAM;MACnBA,IAAM,WAAW,GAAG,KAAK,CAAC,SAAS,EAAE;MACrCA,IAAM,eAAe,GAAG,KAAK,CAAC,aAAa,EAAE;MAC7CA,IAAM,eAAe,GAAG,KAAK,CAAC,aAAa,EAAE;MAC7CA,IAAM,KAAK,GAAG,UAAU,GAAG,eAAe,IACrC,cAAc,GAAG,eAAe,CAAC;MACtCA,IAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,eAAe,EACrD,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAClD,KAAK,EAAE,KAAK,EACZ,CAAC,EACD,eAAe,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,eAAe,EACpE,eAAe,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;MACvE,gBAAgB,CAAC,IAAI,CAAC,gCAAgC,EACpD,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAChF,UAAU,GAAG,cAAc,EAAE,CAAC,UAAU,GAAG,cAAc,EACzD,CAAC,EACD,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MAEjC,IAAI,CAAC,kBAAkB,GAAG,eAAe,GAAG,UAAU,GAAG,eAAe;IACzE;IAED,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM;GACrB;;;;;qCAKD,0BAAA,GAAA,SAAA,0BAAA,CAA2B,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE;IACzE,IAAI,IAAI,CAAC,eAAe,EAAE;MACxB,OAAO,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,CAAC;KACvG,MAAM;MACL,OAAOF,0BAAAA,CAAAA,SAAK,CAAC,0BAAA,CAAA,IAA0B,CAAA,IAAA,EAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,CAAC;IACxF;GACF;;EAxKoC,0BAAA,CAAA;;;;;;;AAiLvC,wBAAwB,CAAC,SAAS,CAAC,GAAG,UAAS,KAAK,EAAE;EACpD,OAAO,KAAK,CAAC,OAAO,EAAE,KAAK,SAAS,CAAC,KAAK,IACxC,KAAK,CAAC,OAAO,EAAE,KAAK,SAAS,CAAC,MAAM,IACmB,sDAAC,KAAK,CAAE,aAAa,EAAE,KAAK,gBAAgB,CAAC,KAAK;CAC5G;;;;;;;;AASD,wBAAwB,CAAC,QAAQ,CAAC,GAAG,UAAS,WAAW,EAAE,KAAK,EAAE;EAChE,OAAO,IAAI,wBAAwB,EAAA,qDAAwD,KAAK,CAAE;CACnG;AAGD,eAAe,wBAAwB","sourcesContent":["/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {import(\"../../layer/Image.js\").default|import(\"../../layer/Vector.js\").default} imageLayer Image or vector layer.\n   */\n  constructor(imageLayer) {\n\n    super(imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        const ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n\n    let image;\n    const imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    const imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    const hints = frameState.viewHints;\n\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      let skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        const context = vectorRenderer.context;\n        const imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      const imageExtent = image.getExtent();\n      const imageResolution = image.getResolution();\n      const imagePixelRatio = image.getPixelRatio();\n      const scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      const transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return super.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n"]},"metadata":{},"sourceType":"module"}