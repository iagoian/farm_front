{"ast":null,"code":"import _toConsumableArray from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return function (source) {\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\nvar WithLatestFromOperator = /*#__PURE__*/function () {\n  function WithLatestFromOperator(observables, project) {\n    _classCallCheck(this, WithLatestFromOperator);\n    this.observables = observables;\n    this.project = project;\n  }\n  _createClass(WithLatestFromOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n  }]);\n  return WithLatestFromOperator;\n}();\nvar WithLatestFromSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(WithLatestFromSubscriber, _OuterSubscriber);\n  var _super = _createSuper(WithLatestFromSubscriber);\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this;\n    _classCallCheck(this, WithLatestFromSubscriber);\n    _this = _super.call(this, destination);\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n    for (var _i = 0; _i < len; _i++) {\n      var observable = observables[_i];\n      _this.add(subscribeToResult(_assertThisInitialized(_this), observable, undefined, _i));\n    }\n    return _this;\n  }\n  _createClass(WithLatestFromSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, innerValue, outerIndex) {\n      this.values[outerIndex] = innerValue;\n      var toRespond = this.toRespond;\n      if (toRespond.length > 0) {\n        var found = toRespond.indexOf(outerIndex);\n        if (found !== -1) {\n          toRespond.splice(found, 1);\n        }\n      }\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {}\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.toRespond.length === 0) {\n        var args = [value].concat(_toConsumableArray(this.values));\n        if (this.project) {\n          this._tryProject(args);\n        } else {\n          this.destination.next(args);\n        }\n      }\n    }\n  }, {\n    key: \"_tryProject\",\n    value: function _tryProject(args) {\n      var result;\n      try {\n        result = this.project.apply(this, args);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n      this.destination.next(result);\n    }\n  }]);\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":"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","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map"]},"metadata":{},"sourceType":"module"}