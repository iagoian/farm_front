{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport var SubscribeOnObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(SubscribeOnObservable, _Observable);\n  var _super = _createSuper(SubscribeOnObservable);\n  function SubscribeOnObservable(source) {\n    var _this;\n    var delayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : asap;\n    _classCallCheck(this, SubscribeOnObservable);\n    _this = _super.call(this);\n    _this.source = source;\n    _this.delayTime = delayTime;\n    _this.scheduler = scheduler;\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      _this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      _this.scheduler = asap;\n    }\n    return _this;\n  }\n  _createClass(SubscribeOnObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var delay = this.delayTime;\n      var source = this.source;\n      var scheduler = this.scheduler;\n      return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n        source: source,\n        subscriber: subscriber\n      });\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : asap;\n      return new SubscribeOnObservable(source, delay, scheduler);\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(arg) {\n      var source = arg.source,\n        subscriber = arg.subscriber;\n      return this.add(source.subscribe(subscriber));\n    }\n  }]);\n  return SubscribeOnObservable;\n}(Observable);","map":{"version":3,"sources":["../../../src/internal/observable/SubscribeOnObservable.ts"],"names":[],"mappings":";;;;AAGA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,IAAI,QAAQ,mBAAmB;AACxC,SAAS,SAAS,QAAQ,mBAAmB;AAY7C,WAAa,qBAAyB;EAAA;EAAA;EAYpC,+BAAmB,MAAqB,EAEW;IAAA;IAAA,IAD/B,SAAA,uEAAoB,CAAC;IAAA,IACrB,SAAA,uEAA2B,IAAI;IAAA;IACjD;IAHiB,MAAA,MAAM,GAAN,MAAM;IACL,MAAA,SAAS,GAAT,SAAS;IACT,MAAA,SAAS,GAAT,SAAS;IAE3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE;MAC1C,MAAK,SAAS,GAAG,CAAC;IACnB;IACD,IAAI,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,UAAU,EAAE;MAC1D,MAAK,SAAS,GAAG,IAAI;;IACtB;EACH;EAAC;IAAA;IAAA,OAGD,oBAAW,UAAyB,EAAA;MAClC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS;MAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM;MAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS;MAEhC,OAAO,SAAS,CAAC,QAAQ,CAAmB,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE;QACjF,MAAM,EAAN,MAAM;QAAE,UAAU,EAAV;OACT,CAAC;IACJ;EAAC;IAAA;IAAA,OA/BD,gBAAiB,MAAqB,EAAoD;MAAA,IAAlD,KAAA,uEAAgB,CAAC;MAAA,IAAE,SAAA,uEAA2B,IAAI;MACxF,OAAO,IAAI,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC;IAC5D;EAAC;IAAA;IAAA,OAGD,kBAA6C,GAAmB,EAAA;MAC9D,IAAQ,MAAM,GAAiB,GAAG,CAA1B,MAAM;QAAE,UAAU,GAAK,GAAG,CAAlB,UAAU;MAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC/C;EAAC;EAAA;AAAA,EAV2C,UAAa","sourcesContent":["import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map"]},"metadata":{},"sourceType":"module"}