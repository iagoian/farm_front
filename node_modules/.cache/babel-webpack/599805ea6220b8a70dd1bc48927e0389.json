{"ast":null,"code":"import _assertThisInitialized from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\nvar DistinctOperator = /*#__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    _classCallCheck(this, DistinctOperator);\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n  _createClass(DistinctOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n  }]);\n  return DistinctOperator;\n}();\nexport var DistinctSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(DistinctSubscriber, _SimpleOuterSubscribe);\n  var _super = _createSuper(DistinctSubscriber);\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this;\n    _classCallCheck(this, DistinctSubscriber);\n    _this = _super.call(this, destination);\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n    if (flushes) {\n      _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_assertThisInitialized(_this))));\n    }\n    return _this;\n  }\n  _createClass(DistinctSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.values.clear();\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error) {\n      this._error(error);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.keySelector) {\n        this._useKeySelector(value);\n      } else {\n        this._finalizeNext(value, value);\n      }\n    }\n  }, {\n    key: \"_useKeySelector\",\n    value: function _useKeySelector(value) {\n      var key;\n      var destination = this.destination;\n      try {\n        key = this.keySelector(value);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n      this._finalizeNext(key, value);\n    }\n  }, {\n    key: \"_finalizeNext\",\n    value: function _finalizeNext(key, value) {\n      var values = this.values;\n      if (!values.has(key)) {\n        values.add(key);\n        this.destination.next(value);\n      }\n    }\n  }]);\n  return DistinctSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/distinct.ts"],"names":[],"mappings":";;;;;AAIA,SAAS,qBAAqB,EAAE,cAAc,EAAE,qBAAqB,QAAQ,mBAAmB;AA4DhG,OAAM,SAAU,QAAQ,CAAO,WAA6B,EAC7B,OAAyB,EAAA;EACtD,OAAO,UAAC,MAAqB;IAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;EAAA;AAC3F;AAAC,IAEK,gBAAgB;EACpB,0BAAoB,WAA6B,EAAU,OAAyB,EAAA;IAAA;IAAhE,IAAA,CAAA,WAAW,GAAX,WAAW;IAA4B,IAAA,CAAA,OAAO,GAAP,OAAO;EAClE;EAAC;IAAA;IAAA,OAED,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7F;EAAC;EAAA;AAAA;AAQH,WAAa,kBAAyB;EAAA;EAAA;EAGpC,4BAAY,WAA0B,EAAU,WAA6B,EAAE,OAAyB,EAAA;IAAA;IAAA;IACtG,0BAAM,WAAW;IAD6B,MAAA,WAAW,GAAX,WAAW;IAFnD,MAAA,MAAM,GAAG,IAAI,GAAG,EAAK;IAK3B,IAAI,OAAO,EAAE;MACX,MAAK,GAAG,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,qBAAqB,+BAAM,CAAC,CAAC;;IACnE;EACH;EAAC;IAAA;IAAA,OAED,sBAAU;MACR,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;IACrB;EAAC;IAAA;IAAA,OAED,qBAAY,KAAU,EAAA;MACpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IACpB;EAAC;IAAA;IAAA,OAES,eAAM,KAAQ,EAAA;MACtB,IAAI,IAAI,CAAC,WAAW,EAAE;QACpB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;OAC5B,MAAM;QACL,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC;MACjC;IACH;EAAC;IAAA;IAAA,OAEO,yBAAgB,KAAQ,EAAA;MAC9B,IAAI,GAAM;MACV,IAAQ,WAAW,GAAK,IAAI,CAApB,WAAW;MACnB,IAAI;QACF,GAAG,GAAG,IAAI,CAAC,WAAY,CAAC,KAAK,CAAC;OAC/B,CAAC,OAAO,GAAG,EAAE;QACZ,WAAW,CAAC,KAAM,CAAC,GAAG,CAAC;QACvB;MACD;MACD,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC;IAChC;EAAC;IAAA;IAAA,OAEO,uBAAc,GAAQ,EAAE,KAAQ,EAAA;MACtC,IAAQ,MAAM,GAAK,IAAI,CAAf,MAAM;MACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAI,GAAG,CAAC,EAAE;QACvB,MAAM,CAAC,GAAG,CAAI,GAAG,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,IAAK,CAAC,KAAK,CAAC;MAC9B;IACH;EAAC;EAAA;AAAA,EA7C2C,qBAA2B","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinct.js.map"]},"metadata":{},"sourceType":"module"}