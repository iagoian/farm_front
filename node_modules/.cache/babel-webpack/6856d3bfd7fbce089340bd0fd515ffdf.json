{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\n/**\n * @license Angular v11.0.9\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { getUrlScheme, syntaxError, Identifiers, JitCompiler, ProviderMeta, I18NHtmlParser, CompilerConfig, CompileReflector, ResourceLoader, JitSummaryResolver, SummaryResolver, Lexer, Parser, HtmlParser, TemplateParser, ElementSchemaRegistry, JitEvaluator, DirectiveNormalizer, UrlResolver, CompileMetadataResolver, NgModuleResolver, DirectiveResolver, PipeResolver, StaticSymbolCache, StyleCompiler, ViewCompiler, NgModuleCompiler, DomElementSchemaRegistry } from '@angular/compiler';\nimport { ɵReflectionCapabilities, ɵstringify, ANALYZE_FOR_ENTRY_COMPONENTS, ElementRef, NgModuleRef, ViewContainerRef, ChangeDetectorRef, Renderer2, QueryList, TemplateRef, ɵCodegenComponentFactoryResolver, ComponentFactoryResolver, ComponentFactory, ComponentRef, NgModuleFactory, ɵcmf, ɵmod, ɵmpd, ɵregisterModuleFactory, Injector, ViewEncapsulation, ChangeDetectionStrategy, SecurityContext, LOCALE_ID, TRANSLATIONS_FORMAT, ɵinlineInterpolate, ɵinterpolate, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵvid, ɵeld, ɵand, ɵted, ɵdid, ɵprd, ɵqud, ɵpad, ɵpod, ɵppd, ɵpid, ɵnov, ɵncd, ɵunv, ɵcrt, ɵccf, InjectionToken, PACKAGE_ROOT_URL, Compiler, MissingTranslationStrategy, ɵConsole, Optional, Inject, TRANSLATIONS, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nvar MODULE_SUFFIX = '';\nvar builtinExternalReferences = createBuiltinExternalReferencesMap();\nvar JitReflector = /*#__PURE__*/function () {\n  function JitReflector() {\n    _classCallCheck(this, JitReflector);\n    this.reflectionCapabilities = new ɵReflectionCapabilities();\n  }\n  _createClass(JitReflector, [{\n    key: \"componentModuleUrl\",\n    value: function componentModuleUrl(type, cmpMetadata) {\n      var moduleId = cmpMetadata.moduleId;\n      if (typeof moduleId === 'string') {\n        var scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\".concat(moduleId).concat(MODULE_SUFFIX);\n      } else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\".concat(ɵstringify(type), \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") + \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n      }\n      return \"./\".concat(ɵstringify(type));\n    }\n  }, {\n    key: \"parameters\",\n    value: function parameters(typeOrFunc) {\n      return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n  }, {\n    key: \"tryAnnotations\",\n    value: function tryAnnotations(typeOrFunc) {\n      return this.annotations(typeOrFunc);\n    }\n  }, {\n    key: \"annotations\",\n    value: function annotations(typeOrFunc) {\n      return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n  }, {\n    key: \"shallowAnnotations\",\n    value: function shallowAnnotations(typeOrFunc) {\n      throw new Error('Not supported in JIT mode');\n    }\n  }, {\n    key: \"propMetadata\",\n    value: function propMetadata(typeOrFunc) {\n      return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n  }, {\n    key: \"hasLifecycleHook\",\n    value: function hasLifecycleHook(type, lcProperty) {\n      return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n  }, {\n    key: \"guards\",\n    value: function guards(type) {\n      return this.reflectionCapabilities.guards(type);\n    }\n  }, {\n    key: \"resolveExternalReference\",\n    value: function resolveExternalReference(ref) {\n      return builtinExternalReferences.get(ref) || ref.runtime;\n    }\n  }]);\n  return JitReflector;\n}();\nfunction createBuiltinExternalReferencesMap() {\n  var map = new Map();\n  map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n  map.set(Identifiers.Renderer2, Renderer2);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(Identifiers.createModuleFactory, ɵcmf);\n  map.set(Identifiers.moduleDef, ɵmod);\n  map.set(Identifiers.moduleProviderDef, ɵmpd);\n  map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n  map.set(Identifiers.Injector, Injector);\n  map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n  map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n  map.set(Identifiers.SecurityContext, SecurityContext);\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n  map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.unwrapValue, ɵunv);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\nvar _NO_RESOURCE_LOADER = {\n  get: function get(url) {\n    throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\".concat(url, \"\\\"\"));\n  }\n};\nvar baseHtmlParser = new InjectionToken('HtmlParser');\nvar CompilerImpl = /*#__PURE__*/function () {\n  function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console) {\n    _classCallCheck(this, CompilerImpl);\n    this._metadataResolver = _metadataResolver;\n    this._delegate = new JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n  _createClass(CompilerImpl, [{\n    key: \"getExtraNgModuleProviders\",\n    value: function getExtraNgModuleProviders() {\n      return [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, {\n        useValue: this\n      }))];\n    }\n  }, {\n    key: \"compileModuleSync\",\n    value: function compileModuleSync(moduleType) {\n      return this._delegate.compileModuleSync(moduleType);\n    }\n  }, {\n    key: \"compileModuleAsync\",\n    value: function compileModuleAsync(moduleType) {\n      return this._delegate.compileModuleAsync(moduleType);\n    }\n  }, {\n    key: \"compileModuleAndAllComponentsSync\",\n    value: function compileModuleAndAllComponentsSync(moduleType) {\n      var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n      return {\n        ngModuleFactory: result.ngModuleFactory,\n        componentFactories: result.componentFactories\n      };\n    }\n  }, {\n    key: \"compileModuleAndAllComponentsAsync\",\n    value: function compileModuleAndAllComponentsAsync(moduleType) {\n      return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(function (result) {\n        return {\n          ngModuleFactory: result.ngModuleFactory,\n          componentFactories: result.componentFactories\n        };\n      });\n    }\n  }, {\n    key: \"loadAotSummaries\",\n    value: function loadAotSummaries(summaries) {\n      this._delegate.loadAotSummaries(summaries);\n    }\n  }, {\n    key: \"hasAotSummary\",\n    value: function hasAotSummary(ref) {\n      return this._delegate.hasAotSummary(ref);\n    }\n  }, {\n    key: \"getComponentFactory\",\n    value: function getComponentFactory(component) {\n      return this._delegate.getComponentFactory(component);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._delegate.clearCache();\n    }\n  }, {\n    key: \"clearCacheFor\",\n    value: function clearCacheFor(type) {\n      this._delegate.clearCacheFor(type);\n    }\n  }, {\n    key: \"getModuleId\",\n    value: function getModuleId(moduleType) {\n      var meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      return meta && meta.id || undefined;\n    }\n  }]);\n  return CompilerImpl;\n}();\nvar ɵ0 = new JitReflector(),\n  ɵ1 = _NO_RESOURCE_LOADER,\n  ɵ2 = function ɵ2(parser, translations, format, config, console) {\n    translations = translations || '';\n    var missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n    return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n  },\n  ɵ3 = new CompilerConfig();\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS__PRE_R3__ = [{\n  provide: CompileReflector,\n  useValue: ɵ0\n}, {\n  provide: ResourceLoader,\n  useValue: ɵ1\n}, {\n  provide: JitSummaryResolver,\n  deps: []\n}, {\n  provide: SummaryResolver,\n  useExisting: JitSummaryResolver\n}, {\n  provide: ɵConsole,\n  deps: []\n}, {\n  provide: Lexer,\n  deps: []\n}, {\n  provide: Parser,\n  deps: [Lexer]\n}, {\n  provide: baseHtmlParser,\n  useClass: HtmlParser,\n  deps: []\n}, {\n  provide: I18NHtmlParser,\n  useFactory: ɵ2,\n  deps: [baseHtmlParser, [new Optional(), new Inject(TRANSLATIONS)], [new Optional(), new Inject(TRANSLATIONS_FORMAT)], [CompilerConfig], [ɵConsole]]\n}, {\n  provide: HtmlParser,\n  useExisting: I18NHtmlParser\n}, {\n  provide: TemplateParser,\n  deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, ɵConsole]\n}, {\n  provide: JitEvaluator,\n  useClass: JitEvaluator,\n  deps: []\n}, {\n  provide: DirectiveNormalizer,\n  deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]\n}, {\n  provide: CompileMetadataResolver,\n  deps: [CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver, SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, ɵConsole, [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]]\n}, DEFAULT_PACKAGE_URL_PROVIDER, {\n  provide: StyleCompiler,\n  deps: [UrlResolver]\n}, {\n  provide: ViewCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: CompilerConfig,\n  useValue: ɵ3\n}, {\n  provide: Compiler,\n  useClass: CompilerImpl,\n  deps: [Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler, NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, ɵConsole]\n}, {\n  provide: DomElementSchemaRegistry,\n  deps: []\n}, {\n  provide: ElementSchemaRegistry,\n  useExisting: DomElementSchemaRegistry\n}, {\n  provide: UrlResolver,\n  deps: [PACKAGE_ROOT_URL]\n}, {\n  provide: DirectiveResolver,\n  deps: [CompileReflector]\n}, {\n  provide: PipeResolver,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleResolver,\n  deps: [CompileReflector]\n}];\nvar COMPILER_PROVIDERS__POST_R3__ = [{\n  provide: Compiler,\n  useFactory: function useFactory() {\n    return new Compiler();\n  }\n}];\nvar COMPILER_PROVIDERS = COMPILER_PROVIDERS__POST_R3__;\n/**\n * @publicApi\n */\nvar JitCompilerFactory = /*#__PURE__*/function () {\n  /* @internal */\n  function JitCompilerFactory(defaultOptions) {\n    _classCallCheck(this, JitCompilerFactory);\n    var compilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning\n    };\n    this._defaultOptions = [compilerOptions].concat(_toConsumableArray(defaultOptions));\n  }\n  _createClass(JitCompilerFactory, [{\n    key: \"createCompiler\",\n    value: function createCompiler() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var opts = _mergeOptions(this._defaultOptions.concat(options));\n      var injector = Injector.create([COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: function useFactory() {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces\n          });\n        },\n        deps: []\n      }, opts.providers]);\n      return injector.get(Compiler);\n    }\n  }]);\n  return JitCompilerFactory;\n}();\nfunction _mergeOptions(optionsArr) {\n  return {\n    useJit: _lastDefined(optionsArr.map(function (options) {\n      return options.useJit;\n    })),\n    defaultEncapsulation: _lastDefined(optionsArr.map(function (options) {\n      return options.defaultEncapsulation;\n    })),\n    providers: _mergeArrays(optionsArr.map(function (options) {\n      return options.providers;\n    })),\n    missingTranslation: _lastDefined(optionsArr.map(function (options) {\n      return options.missingTranslation;\n    })),\n    preserveWhitespaces: _lastDefined(optionsArr.map(function (options) {\n      return options.preserveWhitespaces;\n    }))\n  };\n}\nfunction _lastDefined(args) {\n  for (var i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\nfunction _mergeArrays(parts) {\n  var result = [];\n  parts.forEach(function (part) {\n    return part && result.push.apply(result, _toConsumableArray(part));\n  });\n  return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵ0$1 = {};\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nvar platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [{\n  provide: COMPILER_OPTIONS,\n  useValue: ɵ0$1,\n  multi: true\n}, {\n  provide: CompilerFactory,\n  useClass: JitCompilerFactory,\n  deps: [COMPILER_OPTIONS]\n}]);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResourceLoaderImpl = /*#__PURE__*/function (_ResourceLoader) {\n  _inherits(ResourceLoaderImpl, _ResourceLoader);\n  var _super = _createSuper(ResourceLoaderImpl);\n  function ResourceLoaderImpl() {\n    _classCallCheck(this, ResourceLoaderImpl);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ResourceLoaderImpl, [{\n    key: \"get\",\n    value: function get(url) {\n      var resolve;\n      var reject;\n      var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n      });\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'text';\n      xhr.onload = function () {\n        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n        // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n        // by IE10)\n        var response = xhr.response || xhr.responseText;\n        // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n        var status = xhr.status === 1223 ? 204 : xhr.status;\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n        if (200 <= status && status <= 300) {\n          resolve(response);\n        } else {\n          reject(\"Failed to load \".concat(url));\n        }\n      };\n      xhr.onerror = function () {\n        reject(\"Failed to load \".concat(url));\n      };\n      xhr.send();\n      return promise;\n    }\n  }]);\n  return ResourceLoaderImpl;\n}(ResourceLoader);\nResourceLoaderImpl.ɵfac = function ResourceLoaderImpl_Factory(t) {\n  return ɵResourceLoaderImpl_BaseFactory(t || ResourceLoaderImpl);\n};\nResourceLoaderImpl.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ResourceLoaderImpl,\n  factory: ResourceLoaderImpl.ɵfac\n});\nvar ɵResourceLoaderImpl_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(ResourceLoaderImpl);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResourceLoaderImpl, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵ0$2 = {\n    providers: [{\n      provide: ResourceLoader,\n      useClass: ResourceLoaderImpl,\n      deps: []\n    }]\n  },\n  ɵ1$1 = ɵPLATFORM_BROWSER_ID;\n/**\n * @publicApi\n */\nvar INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, {\n  provide: COMPILER_OPTIONS,\n  useValue: ɵ0$2,\n  multi: true\n}, {\n  provide: PLATFORM_ID,\n  useValue: ɵ1$1\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nvar CachedResourceLoader = /*#__PURE__*/function (_ResourceLoader2) {\n  _inherits(CachedResourceLoader, _ResourceLoader2);\n  var _super2 = _createSuper(CachedResourceLoader);\n  function CachedResourceLoader() {\n    var _this;\n    _classCallCheck(this, CachedResourceLoader);\n    _this = _super2.call(this);\n    _this._cache = ɵglobal.$templateCache;\n    if (_this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n    return _this;\n  }\n  _createClass(CachedResourceLoader, [{\n    key: \"get\",\n    value: function get(url) {\n      if (this._cache.hasOwnProperty(url)) {\n        return Promise.resolve(this._cache[url]);\n      } else {\n        return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n      }\n    }\n  }]);\n  return CachedResourceLoader;\n}(ResourceLoader);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('11.0.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar RESOURCE_CACHE_PROVIDER = [{\n  provide: ResourceLoader,\n  useClass: CachedResourceLoader,\n  deps: []\n}];\n/**\n * @publicApi\n */\nvar platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, ResourceLoaderImpl as ɵResourceLoaderImpl, CachedResourceLoader as ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a, platformCoreDynamic as ɵplatformCoreDynamic };","map":{"version":3,"sources":["../../../../../../packages/platform-browser-dynamic/src/compiler_reflector.ts","../../../../../../packages/platform-browser-dynamic/src/compiler_factory.ts","../../../../../../packages/platform-browser-dynamic/src/platform_core_dynamic.ts","../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts","../../../../../../packages/platform-browser-dynamic/src/platform_providers.ts","../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts","../../../../../../packages/platform-browser-dynamic/src/private_export.ts","../../../../../../packages/platform-browser-dynamic/src/version.ts","../../../../../../packages/platform-browser-dynamic/src/platform-browser-dynamic.ts","../../../../../../packages/platform-browser-dynamic/public_api.ts","../../../../../../packages/platform-browser-dynamic/index.ts","../../../../../../packages/platform-browser-dynamic/platform-browser-dynamic.ts"],"names":["ReflectionCapabilities","stringify","Console","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_BROWSER_ID","global"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, ExternalReference, getUrlScheme, Identifiers, syntaxError} from '@angular/compiler';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, QueryList, Renderer2, SecurityContext, TemplateRef, TRANSLATIONS_FORMAT, ViewContainerRef, ViewEncapsulation, ɵand, ɵccf, ɵcmf, ɵCodegenComponentFactoryResolver, ɵcrt, ɵdid, ɵeld, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵReflectionCapabilities as ReflectionCapabilities, ɵregisterModuleFactory, ɵstringify as stringify, ɵted, ɵunv, ɵvid} from '@angular/core';\n\nexport const MODULE_SUFFIX = '';\nconst builtinExternalReferences = createBuiltinExternalReferencesMap();\n\nexport class JitReflector implements CompileReflector {\n  private reflectionCapabilities = new ReflectionCapabilities();\n\n  componentModuleUrl(type: any, cmpMetadata: Component): string {\n    const moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(\n          `moduleId should be a string in \"${\n              stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n          `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${stringify(type)}`;\n  }\n  parameters(typeOrFunc: /*Type*/ any): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n  tryAnnotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.annotations(typeOrFunc);\n  }\n  annotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n  shallowAnnotations(typeOrFunc: /*Type*/ any): any[] {\n    throw new Error('Not supported in JIT mode');\n  }\n  propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n  guards(type: any): {[key: string]: any} {\n    return this.reflectionCapabilities.guards(type);\n  }\n  resolveExternalReference(ref: ExternalReference): any {\n    return builtinExternalReferences.get(ref) || ref.runtime;\n  }\n}\n\n\nfunction createBuiltinExternalReferencesMap() {\n  const map = new Map<ExternalReference, any>();\n  map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n  map.set(Identifiers.Renderer2, Renderer2);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(Identifiers.createModuleFactory, ɵcmf);\n  map.set(Identifiers.moduleDef, ɵmod);\n  map.set(Identifiers.moduleProviderDef, ɵmpd);\n  map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n  map.set(Identifiers.Injector, Injector);\n  map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n  map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n  map.set(Identifiers.SecurityContext, SecurityContext);\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n  map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.unwrapValue, ɵunv);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileMetadataResolver, CompilerConfig, CompileReflector, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, ElementSchemaRegistry, HtmlParser, I18NHtmlParser, JitCompiler, JitEvaluator, JitSummaryResolver, Lexer, NgModuleCompiler, NgModuleResolver, Parser, PipeResolver, ProviderMeta, ResourceLoader, StaticSymbolCache, StyleCompiler, SummaryResolver, TemplateParser, UrlResolver, ViewCompiler} from '@angular/compiler';\nimport {Compiler, CompilerFactory, CompilerOptions, ComponentFactory, Inject, InjectionToken, Injector, isDevMode, MissingTranslationStrategy, ModuleWithComponentFactories, NgModuleFactory, Optional, PACKAGE_ROOT_URL, StaticProvider, TRANSLATIONS, TRANSLATIONS_FORMAT, Type, ViewEncapsulation, ɵConsole as Console} from '@angular/core';\n\nimport {JitReflector} from './compiler_reflector';\n\nexport const ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\n\nconst _NO_RESOURCE_LOADER: ResourceLoader = {\n  get(url: string): Promise<string> {\n    throw new Error(\n        `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);\n  }\n};\n\nconst baseHtmlParser = new InjectionToken('HtmlParser');\n\nexport class CompilerImpl implements Compiler {\n  private _delegate: JitCompiler;\n  public readonly injector: Injector;\n  constructor(\n      injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      templateParser: TemplateParser, styleCompiler: StyleCompiler, viewCompiler: ViewCompiler,\n      ngModuleCompiler: NgModuleCompiler, summaryResolver: SummaryResolver<Type<any>>,\n      compileReflector: CompileReflector, jitEvaluator: JitEvaluator,\n      compilerConfig: CompilerConfig, console: Console) {\n    this._delegate = new JitCompiler(\n        _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler,\n        summaryResolver, compileReflector, jitEvaluator, compilerConfig, console,\n        this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n\n  private getExtraNgModuleProviders() {\n    return [this._metadataResolver.getProviderMetadata(\n        new ProviderMeta(Compiler, {useValue: this}))];\n  }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType) as NgModuleFactory<T>;\n  }\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType) as Promise<NgModuleFactory<T>>;\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    return {\n      ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n      componentFactories: result.componentFactories as ComponentFactory<any>[],\n    };\n  }\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n        .then((result) => ({\n                ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n                componentFactories: result.componentFactories as ComponentFactory<any>[],\n              }));\n  }\n  loadAotSummaries(summaries: () => any[]) {\n    this._delegate.loadAotSummaries(summaries);\n  }\n  hasAotSummary(ref: Type<any>): boolean {\n    return this._delegate.hasAotSummary(ref);\n  }\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    return this._delegate.getComponentFactory(component) as ComponentFactory<T>;\n  }\n  clearCache(): void {\n    this._delegate.clearCache();\n  }\n  clearCacheFor(type: Type<any>) {\n    this._delegate.clearCacheFor(type);\n  }\n  getModuleId(moduleType: Type<any>): string|undefined {\n    const meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n    return meta && meta.id || undefined;\n  }\n}\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nconst COMPILER_PROVIDERS__PRE_R3__ = <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: I18NHtmlParser,\n    useFactory:\n        (parser: HtmlParser, translations: string|null, format: string, config: CompilerConfig,\n         console: Console) => {\n          translations = translations || '';\n          const missingTranslation =\n              translations ? config.missingTranslation! : MissingTranslationStrategy.Ignore;\n          return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser,\n    deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, Console]\n  },\n  {provide: JitEvaluator, useClass: JitEvaluator, deps: []},\n  {provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  {\n    provide: CompileMetadataResolver,\n    deps: [\n      CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver,\n      SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, Console,\n      [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]\n    ]\n  },\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  {provide: StyleCompiler, deps: [UrlResolver]},\n  {provide: ViewCompiler, deps: [CompileReflector]},\n  {provide: NgModuleCompiler, deps: [CompileReflector]},\n  {provide: CompilerConfig, useValue: new CompilerConfig()},\n  {\n    provide: Compiler,\n    useClass: CompilerImpl,\n    deps: [\n      Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler,\n      NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, Console\n    ]\n  },\n  {provide: DomElementSchemaRegistry, deps: []},\n  {provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  {provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  {provide: DirectiveResolver, deps: [CompileReflector]},\n  {provide: PipeResolver, deps: [CompileReflector]},\n  {provide: NgModuleResolver, deps: [CompileReflector]},\n];\n\nexport const COMPILER_PROVIDERS__POST_R3__ =\n    <StaticProvider[]>[{provide: Compiler, useFactory: () => new Compiler()}];\nexport const COMPILER_PROVIDERS = COMPILER_PROVIDERS__PRE_R3__;\n/**\n * @publicApi\n */\nexport class JitCompilerFactory implements CompilerFactory {\n  private _defaultOptions: CompilerOptions[];\n\n  /* @internal */\n  constructor(defaultOptions: CompilerOptions[]) {\n    const compilerOptions: CompilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n  createCompiler(options: CompilerOptions[] = []): Compiler {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces,\n          });\n        },\n        deps: []\n      },\n      opts.providers!\n    ]);\n    return injector.get(Compiler);\n  }\n}\n\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers!)),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n  };\n}\n\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  const result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, CompilerFactory, createPlatformFactory, platformCore, PlatformRef, StaticProvider} from '@angular/core';\n\nimport {JitCompilerFactory} from './compiler_factory';\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nexport const platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\n]);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class ResourceLoaderImpl extends ResourceLoader {\n  get(url: string): Promise<string> {\n    let resolve: (result: any) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise<string>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText;\n\n      // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n      let status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() {\n      reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return promise;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {ResourceLoader} from '@angular/compiler';\nimport {COMPILER_OPTIONS, PLATFORM_ID, StaticProvider} from '@angular/core';\n\nimport {ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS as INTERNAL_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser';\n\nimport {ResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\n/**\n * @publicApi\n */\nexport const INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: StaticProvider[] = [\n  INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n  {\n    provide: COMPILER_OPTIONS,\n    useValue: {providers: [{provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: []}]},\n    multi: true\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {ɵglobal as global} from '@angular/core';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl} from './compiler_factory';\nexport {platformCoreDynamic as ɵplatformCoreDynamic} from './platform_core_dynamic';\nexport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nexport {ResourceLoaderImpl as ɵResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('11.0.9');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {CompilerFactory, createPlatformFactory, platformCore, PlatformRef, Provider, StaticProvider} from '@angular/core';\n\nimport {platformCoreDynamic} from './platform_core_dynamic';\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nimport {CachedResourceLoader} from './resource_loader/resource_loader_cache';\n\nexport * from './private_export';\nexport {VERSION} from './version';\nexport {JitCompilerFactory} from './compiler_factory';\n\n/**\n * @publicApi\n */\nexport const RESOURCE_CACHE_PROVIDER: Provider[] =\n    [{provide: ResourceLoader, useClass: CachedResourceLoader, deps: []}];\n\n/**\n * @publicApi\n */\nexport const platformBrowserDynamic = createPlatformFactory(\n    platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/platform-browser-dynamic';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CachedResourceLoader as ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a} from './src/resource_loader/resource_loader_cache';"]},"metadata":{},"sourceType":"module"}