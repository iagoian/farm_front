{"ast":null,"code":"import { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n  return function (source) {\n    return source.lift.call(concatStatic.apply(void 0, [source].concat(observables)));\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/concat.ts"],"names":[],"mappings":"AAAA,SAAU,MAAM,IAAI,YAAY,QAAQ,sBAAsB;AA0B9D,OAAM,SAAU,MAAM,GAAkE;EAAA,kCAAxD,WAAwD;IAAxD,WAAwD;EAAA;EACtF,OAAO,UAAC,MAAqB;IAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,gBAAC,MAAM,SAAK,WAAW,EAAC,CAAC;EAAA;AAC1F","sourcesContent":["import { concat as concatStatic } from '../observable/concat';\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n//# sourceMappingURL=concat.js.map"]},"metadata":{},"sourceType":"module"}