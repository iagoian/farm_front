{"ast":null,"code":"import { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function subscribeToPromise(promise) {\n  return function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, hostReportError);\n    return subscriber;\n  };\n};","map":{"version":3,"sources":["../../../src/internal/util/subscribeToPromise.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAO,OAAuB;EAAA,OAAK,UAAC,UAAyB,EAAI;IAC9F,OAAO,CAAC,IAAI,CACV,UAAC,KAAK,EAAI;MACR,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;QACtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,UAAU,CAAC,QAAQ,EAAE;MACtB;IACH,CAAC,EACD,UAAC,GAAQ;MAAA,OAAK,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;IAAA,EACpC,CACA,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC;IAC5B,OAAO,UAAU;EACnB,CAAC;AAAA","sourcesContent":["import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map"]},"metadata":{},"sourceType":"module"}