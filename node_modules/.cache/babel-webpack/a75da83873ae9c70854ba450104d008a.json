{"ast":null,"code":"/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n  if (Interaction) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n  return DoubleClickZoom;\n}(Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */mapBrowserEvent.originalEvent;\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\nexport default DoubleClickZoom;","map":{"version":3,"sources":["../../../src/ol/interaction/DoubleClickZoom.js"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,OAAO,mBAAmB,MAAM,2BAA2B;AAC3D,OAAO,WAAW,IAAG,WAAW,QAAO,kBAAkB;;;;;;;;;;;;;AAezD,IAAM,eAAe,GAAoB,aAAA,UAAA,WAAA,EAAA;EAKvC,SAAA,eAAW,CAAC,WAAW,EAAE;IACvBA,WAAAA,CAAAA,IAAK,CAAA,IAAA,EAAC;MACJ,WAAW,EAAE;KACd,CAAC;IAEFC,IAAM,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,CAAA,CAAE;;;;;;IAM9C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC;;;;;;IAM/C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,KAAK,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,GAAG;;;;EAEzE,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,eAAA;;EAxB2B,WAAA,CAAA;;;;;;;;;AAoC9B,SAAS,WAAW,CAAC,eAAe,EAAE;EACpCC,IAAI,SAAS,GAAG,KAAK;EACrB,IAAI,eAAe,CAAC,IAAI,IAAI,mBAAmB,CAAC,QAAQ,EAAE;IACxDD,IAAM,YAAY,GAAA,yBAA8B,eAAe,CAAC,aAAc;IAC9EA,IAAM,GAAG,GAAG,eAAe,CAAC,GAAG;IAC/BA,IAAM,MAAM,GAAG,eAAe,CAAC,UAAU;IACzCA,IAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;IAChEA,IAAM,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE;IAC1B,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC;IAChD,eAAe,CAAC,cAAc,EAAE;IAChC,SAAS,GAAG,IAAI;EACjB;EACD,OAAO,CAAC,SAAS;AAClB;AAED,eAAe,eAAe","sourcesContent":["/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n"]},"metadata":{},"sourceType":"module"}