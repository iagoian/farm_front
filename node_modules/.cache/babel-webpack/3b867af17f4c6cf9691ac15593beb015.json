{"ast":null,"code":"import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n  return new Observable(function (subscriber) {\n    var input;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    var source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/defer.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAE1C,SAAS,IAAI,QAAQ,QAAQ;AAC7B,SAAS,KAAK,QAAQ,SAAS;AAmD/B,OAAM,SAAU,KAAK,CAAwC,iBAA0B,EAAA;EACrF,OAAO,IAAI,UAAU,CAAqB,UAAA,UAAU,EAAG;IACrD,IAAI,KAAe;IACnB,IAAI;MACF,KAAK,GAAG,iBAAiB,EAAE;KAC5B,CAAC,OAAO,GAAG,EAAE;MACZ,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;MACrB,OAAO,SAAS;IACjB;IACD,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,KAA4C,CAAC,GAAG,KAAK,EAAE;IACnF,OAAO,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;EACrC,CAAC,CAAC;AACJ","sourcesContent":["import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(subscriber => {\n        let input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map"]},"metadata":{},"sourceType":"module"}