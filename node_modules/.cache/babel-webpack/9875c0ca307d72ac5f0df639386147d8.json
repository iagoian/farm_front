{"ast":null,"code":"/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return (/** @type {!WebGLRenderingContext} */context\n        );\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */document.createElement('canvas');\n    var gl = getContext(canvas, {\n      failIfMajorPerformanceCaveat: true\n    });\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };","map":{"version":3,"sources":["../../src/ol/webgl.js"],"names":["const","let"],"mappings":"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","sourcesContent":["/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n"]},"metadata":{},"sourceType":"module"}