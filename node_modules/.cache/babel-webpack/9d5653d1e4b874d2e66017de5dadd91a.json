{"ast":null,"code":"import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n  closed: true,\n  next: function next(value) {},\n  error: function error(err) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete: function complete() {}\n};","map":{"version":3,"sources":["../../src/internal/Observer.ts"],"names":[],"mappings":"AACA,SAAS,MAAM,QAAQ,UAAU;AACjC,SAAS,eAAe,QAAQ,wBAAwB;AAExD,OAAO,IAAM,KAAK,GAAkB;EAClC,MAAM,EAAE,IAAI;EACZ,IAAI,gBAAC,KAAU,EAAA,CAAoB,CAAC;EACpC,KAAK,iBAAC,GAAQ,EAAA;IACZ,IAAI,MAAM,CAAC,qCAAqC,EAAE;MAChD,MAAM,GAAG;KACV,MAAM;MACL,eAAe,CAAC,GAAG,CAAC;IACrB;EACH,CAAC;EACD,QAAQ,sBAAA,CAAoB;CAC7B","sourcesContent":["import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport const empty = {\n    closed: true,\n    next(value) { },\n    error(err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete() { }\n};\n//# sourceMappingURL=Observer.js.map"]},"metadata":{},"sourceType":"module"}