{"ast":null,"code":"import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector) {\n  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;\n  if (typeof resultSelector === 'function') {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}","map":{"version":3,"sources":["../../../src/internal/operators/mergeMapTo.ts"],"names":[],"mappings":"AAEA,SAAS,QAAQ,QAAQ,YAAY;AAiDrC,OAAM,SAAU,UAAU,CACxB,eAAkB,EAClB,cAAwH,EAC3E;EAAA,IAA7C,UAAA,uEAAqB,MAAM,CAAC,iBAAiB;EAE7C,IAAI,OAAO,cAAc,KAAK,UAAU,EAAE;IACxC,OAAO,QAAQ,CAAC;MAAA,OAAM,eAAe;IAAA,GAAE,cAAc,EAAE,UAAU,CAAC;EACnE;EACD,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;IACtC,UAAU,GAAG,cAAc;EAC5B;EACD,OAAO,QAAQ,CAAC;IAAA,OAAM,eAAe;EAAA,GAAE,UAAU,CAAC;AACpD","sourcesContent":["import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map"]},"metadata":{},"sourceType":"module"}