{"ast":null,"code":"import _get from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport var SubjectSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SubjectSubscriber, _Subscriber);\n  var _super = _createSuper(SubjectSubscriber);\n  function SubjectSubscriber(destination) {\n    var _this;\n    _classCallCheck(this, SubjectSubscriber);\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    return _this;\n  }\n  return _createClass(SubjectSubscriber);\n}(Subscriber);\nexport var Subject = /*#__PURE__*/function (_Observable) {\n  _inherits(Subject, _Observable);\n  var _super2 = _createSuper(Subject);\n  function Subject() {\n    var _this2;\n    _classCallCheck(this, Subject);\n    _this2 = _super2.call(this);\n    _this2.observers = [];\n    _this2.closed = false;\n    _this2.isStopped = false;\n    _this2.hasError = false;\n    _this2.thrownError = null;\n    return _this2;\n  }\n  _createClass(Subject, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return new SubjectSubscriber(this);\n    }\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      var subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n      if (!this.isStopped) {\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n          copy[i].next(value);\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n      this.hasError = true;\n      this.thrownError = err;\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n      for (var i = 0; i < len; i++) {\n        copy[i].error(err);\n      }\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n      for (var i = 0; i < len; i++) {\n        copy[i].complete();\n      }\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.isStopped = true;\n      this.closed = true;\n      this.observers = null;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else {\n        return _get(_getPrototypeOf(Subject.prototype), \"_trySubscribe\", this).call(this, subscriber);\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else if (this.hasError) {\n        subscriber.error(this.thrownError);\n        return Subscription.EMPTY;\n      } else if (this.isStopped) {\n        subscriber.complete();\n        return Subscription.EMPTY;\n      } else {\n        this.observers.push(subscriber);\n        return new SubjectSubscription(this, subscriber);\n      }\n    }\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      var observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }]);\n  return Subject;\n}(Observable);\nSubject.create = function (destination, source) {\n  return new AnonymousSubject(destination, source);\n};\nexport var AnonymousSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AnonymousSubject, _Subject);\n  var _super3 = _createSuper(AnonymousSubject);\n  function AnonymousSubject(destination, source) {\n    var _this3;\n    _classCallCheck(this, AnonymousSubject);\n    _this3 = _super3.call(this);\n    _this3.destination = destination;\n    _this3.source = source;\n    return _this3;\n  }\n  _createClass(AnonymousSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var destination = this.destination;\n      if (destination && destination.next) {\n        destination.next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var destination = this.destination;\n      if (destination && destination.error) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var destination = this.destination;\n      if (destination && destination.complete) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var source = this.source;\n      if (source) {\n        return this.source.subscribe(subscriber);\n      } else {\n        return Subscription.EMPTY;\n      }\n    }\n  }]);\n  return AnonymousSubject;\n}(Subject);","map":{"version":3,"sources":["../../src/internal/Subject.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map"]},"metadata":{},"sourceType":"module"}