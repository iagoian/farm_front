{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\nvar ScanOperator = /*#__PURE__*/function () {\n  function ScanOperator(accumulator, seed) {\n    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, ScanOperator);\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n  _createClass(ScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n  }]);\n  return ScanOperator;\n}();\nvar ScanSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ScanSubscriber, _Subscriber);\n  var _super = _createSuper(ScanSubscriber);\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this;\n    _classCallCheck(this, ScanSubscriber);\n    _this = _super.call(this, destination);\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(ScanSubscriber, [{\n    key: \"seed\",\n    get: function get() {\n      return this._seed;\n    },\n    set: function set(value) {\n      this.hasSeed = true;\n      this._seed = value;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSeed) {\n        this.seed = value;\n        this.destination.next(value);\n      } else {\n        return this._tryNext(value);\n      }\n    }\n  }, {\n    key: \"_tryNext\",\n    value: function _tryNext(value) {\n      var index = this.index++;\n      var result;\n      try {\n        result = this.accumulator(this.seed, value, index);\n      } catch (err) {\n        this.destination.error(err);\n      }\n      this.seed = result;\n      this.destination.next(result);\n    }\n  }]);\n  return ScanSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/scan.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAU,QAAQ,eAAe;AAoD1C,OAAM,SAAU,IAAI,CAAO,WAAmD,EAAE,IAAY,EAAA;EAC1F,IAAI,OAAO,GAAG,KAAK;EAMnB,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;IACzB,OAAO,GAAG,IAAI;EACf;EAED,OAAO,SAAS,oBAAoB,CAAC,MAAqB,EAAA;IACxD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EAClE,CAAC;AACH;AAAC,IAEK,YAAY;EAChB,sBAAoB,WAAmD,EAAU,IAAY,EAAkC;IAAA,IAAxB,OAAA,uEAAmB,KAAK;IAAA;IAA3G,IAAA,CAAA,WAAW,GAAX,WAAW;IAAkD,IAAA,CAAA,IAAI,GAAJ,IAAI;IAAkB,IAAA,CAAA,OAAO,GAAP,OAAO;EAAoB;EAAC;IAAA;IAAA,OAEnI,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpG;EAAC;EAAA;AAAA;AAAA,IAQG,cAAqB;EAAA;EAAA;EAYzB,wBAAY,WAA0B,EAAU,WAAmD,EAAU,KAAY,EACrG,OAAgB,EAAA;IAAA;IAAA;IAClC,0BAAM,WAAW;IAF6B,MAAA,WAAW,GAAX,WAAW;IAAkD,MAAA,KAAK,GAAL,KAAK;IAC9F,MAAA,OAAO,GAAP,OAAO;IAZnB,MAAA,KAAK,GAAW,CAAC;IAAC;EAc1B;EAAC;IAAA;IAAA,KAZD,eAAQ;MACN,OAAO,IAAI,CAAC,KAAK;IACnB,CAAC;IAAA,KAED,aAAS,KAAY,EAAA;MACnB,IAAI,CAAC,OAAO,GAAG,IAAI;MACnB,IAAI,CAAC,KAAK,GAAG,KAAK;IACpB;EAAC;IAAA;IAAA,OAOS,eAAM,KAAQ,EAAA;MACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;QACjB,IAAI,CAAC,IAAI,GAAG,KAAK;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;OAC7B,MAAM;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC5B;IACH;EAAC;IAAA;IAAA,OAEO,kBAAS,KAAQ,EAAA;MACvB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;MAC1B,IAAI,MAAW;MACf,IAAI;QACF,MAAM,GAAG,IAAI,CAAC,WAAW,CAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;OACtD,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;MAC5B;MACD,IAAI,CAAC,IAAI,GAAG,MAAM;MAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B;EAAC;EAAA;AAAA,EApCgC,UAAa","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map"]},"metadata":{},"sourceType":"module"}