{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(unsubscribe) {\n    _classCallCheck(this, Subscription);\n    this.closed = false;\n    this._parentOrParents = null;\n    this._subscriptions = null;\n    if (unsubscribe) {\n      this._ctorUnsubscribe = true;\n      this._unsubscribe = unsubscribe;\n    }\n  }\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n      if (this.closed) {\n        return;\n      }\n      var _parentOrParents = this._parentOrParents,\n        _ctorUnsubscribe = this._ctorUnsubscribe,\n        _unsubscribe = this._unsubscribe,\n        _subscriptions = this._subscriptions;\n      this.closed = true;\n      this._parentOrParents = null;\n      this._subscriptions = null;\n      if (_parentOrParents instanceof Subscription) {\n        _parentOrParents.remove(this);\n      } else if (_parentOrParents !== null) {\n        for (var index = 0; index < _parentOrParents.length; ++index) {\n          var parent = _parentOrParents[index];\n          parent.remove(this);\n        }\n      }\n      if (isFunction(_unsubscribe)) {\n        if (_ctorUnsubscribe) {\n          this._unsubscribe = undefined;\n        }\n        try {\n          _unsubscribe.call(this);\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n        }\n      }\n      if (isArray(_subscriptions)) {\n        var _index = -1;\n        var len = _subscriptions.length;\n        while (++_index < len) {\n          var sub = _subscriptions[_index];\n          if (isObject(sub)) {\n            try {\n              sub.unsubscribe();\n            } catch (e) {\n              errors = errors || [];\n              if (e instanceof UnsubscriptionError) {\n                errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n              } else {\n                errors.push(e);\n              }\n            }\n          }\n        }\n      }\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var subscription = teardown;\n      if (!teardown) {\n        return Subscription.EMPTY;\n      }\n      switch (typeof teardown) {\n        case 'function':\n          subscription = new Subscription(teardown);\n        case 'object':\n          if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n            return subscription;\n          } else if (this.closed) {\n            subscription.unsubscribe();\n            return subscription;\n          } else if (!(subscription instanceof Subscription)) {\n            var tmp = subscription;\n            subscription = new Subscription();\n            subscription._subscriptions = [tmp];\n          }\n          break;\n        default:\n          {\n            throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n          }\n      }\n      var _subscription = subscription,\n        _parentOrParents = _subscription._parentOrParents;\n      if (_parentOrParents === null) {\n        subscription._parentOrParents = this;\n      } else if (_parentOrParents instanceof Subscription) {\n        if (_parentOrParents === this) {\n          return subscription;\n        }\n        subscription._parentOrParents = [_parentOrParents, this];\n      } else if (_parentOrParents.indexOf(this) === -1) {\n        _parentOrParents.push(this);\n      } else {\n        return subscription;\n      }\n      var subscriptions = this._subscriptions;\n      if (subscriptions === null) {\n        this._subscriptions = [subscription];\n      } else {\n        subscriptions.push(subscription);\n      }\n      return subscription;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(subscription) {\n      var subscriptions = this._subscriptions;\n      if (subscriptions) {\n        var subscriptionIndex = subscriptions.indexOf(subscription);\n        if (subscriptionIndex !== -1) {\n          subscriptions.splice(subscriptionIndex, 1);\n        }\n      }\n    }\n  }]);\n  return Subscription;\n}();\nSubscription.EMPTY = function (empty) {\n  empty.closed = true;\n  return empty;\n}(new Subscription());\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n}","map":{"version":3,"sources":["../../src/internal/Subscription.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (let index = 0; index < _parentOrParents.length; ++index) {\n                const parent = _parentOrParents[index];\n                parent.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            let index = -1;\n            let len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        let { _parentOrParents } = subscription;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        const subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map"]},"metadata":{},"sourceType":"module"}