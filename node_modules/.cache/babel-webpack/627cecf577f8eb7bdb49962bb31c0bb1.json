{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultThrottleConfig;\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n  };\n}\nvar ThrottleOperator = /*#__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    _classCallCheck(this, ThrottleOperator);\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  _createClass(ThrottleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n  }]);\n  return ThrottleOperator;\n}();\nvar ThrottleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(ThrottleSubscriber, _SimpleOuterSubscribe);\n  var _super = _createSuper(ThrottleSubscriber);\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this;\n    _classCallCheck(this, ThrottleSubscriber);\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n  _createClass(ThrottleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this._hasValue = true;\n      this._sendValue = value;\n      if (!this._throttled) {\n        if (this._leading) {\n          this.send();\n        } else {\n          this.throttle(value);\n        }\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var _hasValue = this._hasValue,\n        _sendValue = this._sendValue;\n      if (_hasValue) {\n        this.destination.next(_sendValue);\n        this.throttle(_sendValue);\n      }\n      this._hasValue = false;\n      this._sendValue = undefined;\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(value) {\n      var duration = this.tryDurationSelector(value);\n      if (!!duration) {\n        this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n      }\n    }\n  }, {\n    key: \"tryDurationSelector\",\n    value: function tryDurationSelector(value) {\n      try {\n        return this.durationSelector(value);\n      } catch (err) {\n        this.destination.error(err);\n        return null;\n      }\n    }\n  }, {\n    key: \"throttlingDone\",\n    value: function throttlingDone() {\n      var _throttled = this._throttled,\n        _trailing = this._trailing;\n      if (_throttled) {\n        _throttled.unsubscribe();\n      }\n      this._throttled = undefined;\n      if (_trailing) {\n        this.send();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.throttlingDone();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.throttlingDone();\n    }\n  }]);\n  return ThrottleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/throttle.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map"]},"metadata":{},"sourceType":"module"}