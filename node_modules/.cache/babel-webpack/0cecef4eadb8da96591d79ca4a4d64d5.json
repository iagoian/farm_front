{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\nvar SubscribeOnOperator = /*#__PURE__*/function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    _classCallCheck(this, SubscribeOnOperator);\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n  _createClass(SubscribeOnOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n  }]);\n  return SubscribeOnOperator;\n}();","map":{"version":3,"sources":["../../../src/internal/operators/subscribeOn.ts"],"names":[],"mappings":";;AAGA,SAAS,qBAAqB,QAAQ,qCAAqC;AA6C3E,OAAM,SAAU,WAAW,CAAI,SAAwB,EAAmB;EAAA,IAAjB,KAAA,uEAAgB,CAAC;EACxE,OAAO,SAAS,2BAA2B,CAAC,MAAqB,EAAA;IAC/D,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAI,SAAS,EAAE,KAAK,CAAC,CAAC;EAClE,CAAC;AACH;AAAC,IAEK,mBAAmB;EACvB,6BAAoB,SAAwB,EACxB,KAAa,EAAA;IAAA;IADb,IAAA,CAAA,SAAS,GAAT,SAAS;IACT,IAAA,CAAA,KAAK,GAAL,KAAK;EACzB;EAAC;IAAA;IAAA,OACD,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,IAAI,qBAAqB,CAC9B,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CACnC,CAAC,SAAS,CAAC,UAAU,CAAC;IACzB;EAAC;EAAA;AAAA","sourcesContent":["import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map"]},"metadata":{},"sourceType":"module"}