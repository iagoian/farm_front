{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\nvar SingleOperator = /*#__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    _classCallCheck(this, SingleOperator);\n    this.predicate = predicate;\n    this.source = source;\n  }\n  _createClass(SingleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n  }]);\n  return SingleOperator;\n}();\nvar SingleSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SingleSubscriber, _Subscriber);\n  var _super = _createSuper(SingleSubscriber);\n  function SingleSubscriber(destination, predicate, source) {\n    var _this;\n    _classCallCheck(this, SingleSubscriber);\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(SingleSubscriber, [{\n    key: \"applySingleValue\",\n    value: function applySingleValue(value) {\n      if (this.seenValue) {\n        this.destination.error('Sequence contains more than one element');\n      } else {\n        this.seenValue = true;\n        this.singleValue = value;\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var index = this.index++;\n      if (this.predicate) {\n        this.tryNext(value, index);\n      } else {\n        this.applySingleValue(value);\n      }\n    }\n  }, {\n    key: \"tryNext\",\n    value: function tryNext(value, index) {\n      try {\n        if (this.predicate(value, index, this.source)) {\n          this.applySingleValue(value);\n        }\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var destination = this.destination;\n      if (this.index > 0) {\n        destination.next(this.seenValue ? this.singleValue : undefined);\n        destination.complete();\n      } else {\n        destination.error(new EmptyError());\n      }\n    }\n  }]);\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/single.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,UAAU,QAAQ,oBAAoB;AAkD/C,OAAM,SAAU,MAAM,CAAI,SAAuE,EAAA;EAC/F,OAAO,UAAC,MAAqB;IAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;EAAA;AACtF;AAAC,IAEK,cAAc;EAClB,wBAAoB,SAAuE,EACvE,MAAsB,EAAA;IAAA;IADtB,IAAA,CAAA,SAAS,GAAT,SAAS;IACT,IAAA,CAAA,MAAM,GAAN,MAAM;EAC1B;EAAC;IAAA;IAAA,OAED,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxF;EAAC;EAAA;AAAA;AAAA,IAQG,gBAAoB;EAAA;EAAA;EAKxB,0BAAY,WAAwB,EAChB,SAAuE,EACvE,MAAsB,EAAA;IAAA;IAAA;IACxC,0BAAM,WAAW;IAFC,MAAA,SAAS,GAAT,SAAS;IACT,MAAA,MAAM,GAAN,MAAM;IANlB,MAAA,SAAS,GAAY,KAAK;IAE1B,MAAA,KAAK,GAAW,CAAC;IAAC;EAM1B;EAAC;IAAA;IAAA,OAEO,0BAAiB,KAAQ,EAAA;MAC/B,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yCAAyC,CAAC;OAClE,MAAM;QACL,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK;MACzB;IACH;EAAC;IAAA;IAAA,OAES,eAAM,KAAQ,EAAA;MACtB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;MAE1B,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;OAC3B,MAAM;QACL,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;MAC7B;IACH;EAAC;IAAA;IAAA,OAEO,iBAAQ,KAAQ,EAAE,KAAa,EAAA;MACrC,IAAI;QACF,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;UAC7C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAC7B;OACF,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;MAC5B;IACH;EAAC;IAAA;IAAA,OAES,qBAAS;MACjB,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW;MAEpC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;QAClB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC/D,WAAW,CAAC,QAAQ,EAAE;OACvB,MAAM;QACL,WAAW,CAAC,KAAK,CAAC,IAAI,UAAU,GAAC;MAClC;IACH;EAAC;EAAA;AAAA,EAjD+B,UAAa","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n//# sourceMappingURL=single.js.map"]},"metadata":{},"sourceType":"module"}