{"ast":null,"code":"/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone() {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity() {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView() {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation() {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale() {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel() {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor() {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage(pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage(pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState() {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize() {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize() {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin() {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize() {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity(opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation(rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale(scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel(snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange(listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load() {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange(listener, thisArg) {\n  abstract();\n};\nexport default ImageStyle;","map":{"version":3,"sources":["../../../src/ol/style/Image.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scale_ = options.scale;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * This method is deprecated and always returns false.\n   * @return {boolean} false.\n   * @deprecated\n   * @api\n   */\n  getSnapToPixel() {\n    return false;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * This method is deprecated and does nothing.\n   * @param {boolean} snapToPixel Snap to pixel?\n   * @deprecated\n   * @api\n   */\n  setSnapToPixel(snapToPixel) {}\n\n  /**\n   * @abstract\n   * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\n   * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n   * @template T\n   */\n  listenImageChange(listener, thisArg) {\n    return abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\n   * @template T\n   */\n  unlistenImageChange(listener, thisArg) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n"]},"metadata":{},"sourceType":"module"}