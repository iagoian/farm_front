{"ast":null,"code":"import _toConsumableArray from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        return bindCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n        }));\n      };\n    }\n  }\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var context = this;\n    var subject;\n    var params = {\n      context: context,\n      subject: subject,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler\n    };\n    return new Observable(function (subscriber) {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject();\n          var handler = function handler() {\n            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              innerArgs[_key2] = arguments[_key2];\n            }\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n          try {\n            callbackFunc.apply(context, [].concat(args, [handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        var state = {\n          args: args,\n          subscriber: subscriber,\n          params: params\n        };\n        return scheduler.schedule(dispatch, 0, state);\n      }\n    });\n  };\n}\nfunction dispatch(state) {\n  var _this = this;\n  var self = this;\n  var args = state.args,\n    subscriber = state.subscriber,\n    params = state.params;\n  var callbackFunc = params.callbackFunc,\n    context = params.context,\n    scheduler = params.scheduler;\n  var subject = params.subject;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n    var handler = function handler() {\n      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        innerArgs[_key3] = arguments[_key3];\n      }\n      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      _this.add(scheduler.schedule(dispatchNext, 0, {\n        value: value,\n        subject: subject\n      }));\n    };\n    try {\n      callbackFunc.apply(context, [].concat(_toConsumableArray(args), [handler]));\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n  this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n  var value = state.value,\n    subject = state.subject;\n  subject.next(value);\n  subject.complete();\n}\nfunction dispatchError(state) {\n  var err = state.err,\n    subject = state.subject;\n  subject.error(err);\n}","map":{"version":3,"sources":["../../../src/internal/observable/bindCallback.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map"]},"metadata":{},"sourceType":"module"}