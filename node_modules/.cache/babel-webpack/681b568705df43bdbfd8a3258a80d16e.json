{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return function (source) {\n    return source.lift(new TakeUntilOperator(notifier));\n  };\n}\nvar TakeUntilOperator = /*#__PURE__*/function () {\n  function TakeUntilOperator(notifier) {\n    _classCallCheck(this, TakeUntilOperator);\n    this.notifier = notifier;\n  }\n  _createClass(TakeUntilOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n      var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n      if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n        takeUntilSubscriber.add(notifierSubscription);\n        return source.subscribe(takeUntilSubscriber);\n      }\n      return takeUntilSubscriber;\n    }\n  }]);\n  return TakeUntilOperator;\n}();\nvar TakeUntilSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(TakeUntilSubscriber, _SimpleOuterSubscribe);\n  var _super = _createSuper(TakeUntilSubscriber);\n  function TakeUntilSubscriber(destination) {\n    var _this;\n    _classCallCheck(this, TakeUntilSubscriber);\n    _this = _super.call(this, destination);\n    _this.seenValue = false;\n    return _this;\n  }\n  _createClass(TakeUntilSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.seenValue = true;\n      this.complete();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {}\n  }]);\n  return TakeUntilSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/takeUntil.ts"],"names":[],"mappings":";;;;AAKA,SAAS,cAAc,EAAE,qBAAqB,EAAE,qBAAqB,QAAQ,mBAAmB;AA0ChG,OAAM,SAAU,SAAS,CAAI,QAAyB,EAAA;EACpD,OAAO,UAAC,MAAqB;IAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;EAAA;AAChF;AAAC,IAEK,iBAAiB;EACrB,2BAAoB,QAAyB,EAAA;IAAA;IAAzB,IAAA,CAAA,QAAQ,GAAR,QAAQ;EAC5B;EAAC;IAAA;IAAA,OAED,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,IAAM,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,UAAU,CAAC;MAC/D,IAAM,oBAAoB,GAAG,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,qBAAqB,CAAC,mBAAmB,CAAC,CAAC;MAC1G,IAAI,oBAAoB,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE;QAC1D,mBAAmB,CAAC,GAAG,CAAC,oBAAoB,CAAC;QAC7C,OAAO,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC;MAC7C;MACD,OAAO,mBAAmB;IAC5B;EAAC;EAAA;AAAA;AAAA,IAQG,mBAA0B;EAAA;EAAA;EAG9B,6BAAY,WAA4B,EAAA;IAAA;IAAA;IACtC,0BAAM,WAAW;IAHnB,MAAA,SAAS,GAAG,KAAK;IAAC;EAIlB;EAAC;IAAA;IAAA,OAED,sBAAU;MACR,IAAI,CAAC,SAAS,GAAG,IAAI;MACrB,IAAI,CAAC,QAAQ,EAAE;IACjB;EAAC;IAAA;IAAA,OAED,0BAAc,CAEd;EAAC;EAAA;AAAA,EAdqC,qBAA2B","sourcesContent":["import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=takeUntil.js.map"]},"metadata":{},"sourceType":"module"}