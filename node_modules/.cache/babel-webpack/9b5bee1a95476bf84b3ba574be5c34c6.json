{"ast":null,"code":"import { map } from './map';\nexport function pluck() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n  var length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return function (source) {\n    return map(plucker(properties, length))(source);\n  };\n}\nfunction plucker(props, length) {\n  var mapper = function mapper(x) {\n    var currentProp = x;\n    for (var i = 0; i < length; i++) {\n      var p = currentProp != null ? currentProp[props[i]] : undefined;\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n  return mapper;\n}","map":{"version":3,"sources":["../../../src/internal/operators/pluck.ts"],"names":[],"mappings":"AACA,SAAS,GAAG,QAAQ,OAAO;AA6C3B,OAAM,SAAU,KAAK,GAA8B;EAAA,kCAApB,UAAoB;IAApB,UAAoB;EAAA;EACjD,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM;EAChC,IAAI,MAAM,KAAK,CAAC,EAAE;IAChB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACvD;EACD,OAAO,UAAC,MAAqB;IAAA,OAAK,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,MAAa,CAAC;EAAA;AACnF;AAEA,SAAS,OAAO,CAAC,KAAe,EAAE,MAAc,EAAA;EAC9C,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,CAAS,EAAI;IAC3B,IAAI,WAAW,GAAG,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;MAC/B,IAAM,CAAC,GAAG,WAAW,IAAI,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS;MACjE,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;QAChB,WAAW,GAAG,CAAC;OAChB,MAAM;QACL,OAAO,SAAS;MACjB;IACF;IACD,OAAO,WAAW;EACpB,CAAC;EAED,OAAO,MAAM;AACf","sourcesContent":["import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map"]},"metadata":{},"sourceType":"module"}