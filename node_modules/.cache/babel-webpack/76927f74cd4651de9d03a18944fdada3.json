{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Action } from './Action';\nexport var AsyncAction = /*#__PURE__*/function (_Action) {\n  _inherits(AsyncAction, _Action);\n  var _super = _createSuper(AsyncAction);\n  function AsyncAction(scheduler, work) {\n    var _this;\n    _classCallCheck(this, AsyncAction);\n    _this = _super.call(this, scheduler, work);\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.pending = false;\n    return _this;\n  }\n  _createClass(AsyncAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this.closed) {\n        return this;\n      }\n      this.state = state;\n      var id = this.id;\n      var scheduler = this.scheduler;\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, delay);\n      }\n      this.pending = true;\n      this.delay = delay;\n      this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n      return this;\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (delay !== null && this.delay === delay && this.pending === false) {\n        return id;\n      }\n      clearInterval(id);\n      return undefined;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(state, delay) {\n      if (this.closed) {\n        return new Error('executing a cancelled action');\n      }\n      this.pending = false;\n      var error = this._execute(state, delay);\n      if (error) {\n        return error;\n      } else if (this.pending === false && this.id != null) {\n        this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n      }\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute(state, delay) {\n      var errored = false;\n      var errorValue = undefined;\n      try {\n        this.work(state);\n      } catch (e) {\n        errored = true;\n        errorValue = !!e && e || new Error(e);\n      }\n      if (errored) {\n        this.unsubscribe();\n        return errorValue;\n      }\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var id = this.id;\n      var scheduler = this.scheduler;\n      var actions = scheduler.actions;\n      var index = actions.indexOf(this);\n      this.work = null;\n      this.state = null;\n      this.pending = false;\n      this.scheduler = null;\n      if (index !== -1) {\n        actions.splice(index, 1);\n      }\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n      this.delay = null;\n    }\n  }]);\n  return AsyncAction;\n}(Action);","map":{"version":3,"sources":["../../../src/internal/scheduler/AsyncAction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n//# sourceMappingURL=AsyncAction.js.map"]},"metadata":{},"sourceType":"module"}