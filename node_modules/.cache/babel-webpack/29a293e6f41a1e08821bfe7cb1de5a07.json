{"ast":null,"code":"/**\n * @module ol/renderer/canvas/Map\n */\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\nimport { includes, stableSort } from '../../array.js';\nimport { CLASS_UNSELECTABLE } from '../../css.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { visibleAtResolution } from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, { sortByZIndex } from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n  }\n  if (MapRenderer) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create(MapRenderer && MapRenderer.prototype);\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n      var transform = this.getTransform(frameState);\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio, extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext, frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform(frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    var rotation = frameState.viewState.rotation;\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */this.getLayerRenderer(layer);\n      if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n    if (rotation) {\n      context.restore();\n    }\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */this.getLayerRenderer(layer);\n        result = layerRenderer.forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n  return CanvasMapRenderer;\n}(MapRenderer);\nexport default CanvasMapRenderer;","map":{"version":3,"sources":["../../../../src/ol/renderer/canvas/Map.js"],"names":["const","super","let"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport const layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CanvasMapRenderer extends MapRenderer {\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    const context = this.context_;\n    if (map.hasListener(type)) {\n      const extent = frameState.extent;\n      const pixelRatio = frameState.pixelRatio;\n      const viewState = frameState.viewState;\n      const rotation = viewState.rotation;\n\n      const transform = this.getTransform(frameState);\n\n      const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getTransform(frameState) {\n    const viewState = frameState.viewState;\n    const dx1 = this.canvas_.width / 2;\n    const dy1 = this.canvas_.height / 2;\n    const sx = frameState.pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0];\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const context = this.context_;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    const rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      const layer = layerState.layer;\n      const layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  registerLayerRenderers(constructors) {\n    super.registerLayerRenderers(constructors);\n    for (let i = 0, ii = constructors.length; i < ii; ++i) {\n      const ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  }\n}\n\n\nexport default CanvasMapRenderer;\n"]},"metadata":{},"sourceType":"module"}