{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n  return function (source) {\n    return source.lift(new SampleOperator(notifier));\n  };\n}\nvar SampleOperator = /*#__PURE__*/function () {\n  function SampleOperator(notifier) {\n    _classCallCheck(this, SampleOperator);\n    this.notifier = notifier;\n  }\n  _createClass(SampleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var sampleSubscriber = new SampleSubscriber(subscriber);\n      var subscription = source.subscribe(sampleSubscriber);\n      subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n      return subscription;\n    }\n  }]);\n  return SampleOperator;\n}();\nvar SampleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(SampleSubscriber, _SimpleOuterSubscribe);\n  var _super = _createSuper(SampleSubscriber);\n  function SampleSubscriber() {\n    var _this;\n    _classCallCheck(this, SampleSubscriber);\n    _this = _super.apply(this, arguments);\n    _this.hasValue = false;\n    return _this;\n  }\n  _createClass(SampleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.value = value;\n      this.hasValue = true;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.emitValue();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.emitValue();\n    }\n  }, {\n    key: \"emitValue\",\n    value: function emitValue() {\n      if (this.hasValue) {\n        this.hasValue = false;\n        this.destination.next(this.value);\n      }\n    }\n  }]);\n  return SampleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/sample.ts"],"names":[],"mappings":";;;;AAKA,SAAS,qBAAqB,EAAE,cAAc,EAAE,qBAAqB,QAAQ,mBAAmB;AA0ChG,OAAM,SAAU,MAAM,CAAI,QAAyB,EAAA;EACjD,OAAO,UAAC,MAAqB;IAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC;EAAA;AAC7E;AAAC,IAEK,cAAc;EAClB,wBAAoB,QAAyB,EAAA;IAAA;IAAzB,IAAA,CAAA,QAAQ,GAAR,QAAQ;EAC5B;EAAC;IAAA;IAAA,OAED,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,IAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC;MACzD,IAAM,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC;MACvD,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC5F,OAAO,YAAY;IACrB;EAAC;EAAA;AAAA;AAAA,IAQG,gBAAuB;EAAA;EAAA;EAA7B,4BAAA;IAAA;IAAA;;IAEU,MAAA,QAAQ,GAAY,KAAK;IAAC;EAqBpC;EAAC;IAAA;IAAA,OAnBW,eAAM,KAAQ,EAAA;MACtB,IAAI,CAAC,KAAK,GAAG,KAAK;MAClB,IAAI,CAAC,QAAQ,GAAG,IAAI;IACtB;EAAC;IAAA;IAAA,OAED,sBAAU;MACR,IAAI,CAAC,SAAS,EAAE;IAClB;EAAC;IAAA;IAAA,OAED,0BAAc;MACZ,IAAI,CAAC,SAAS,EAAE;IAClB;EAAC;IAAA;IAAA,OAED,qBAAS;MACP,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,IAAK,CAAC,IAAI,CAAC,KAAM,CAAC;MACpC;IACH;EAAC;EAAA;AAAA,EAtBkC,qBAA2B","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n        return subscription;\n    }\n}\nclass SampleSubscriber extends SimpleOuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n//# sourceMappingURL=sample.js.map"]},"metadata":{},"sourceType":"module"}