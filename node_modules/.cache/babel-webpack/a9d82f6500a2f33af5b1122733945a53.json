{"ast":null,"code":"/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/function (BaseLayer) {\n  function LayerGroup(opt_options) {\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n    listen(this, getChangeEventType(Property.LAYERS), this.handleLayersChanged_, this);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof /** @type {?} */layers.getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    this.setLayers(layers);\n  }\n  if (BaseLayer) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_() {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    }\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_(collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_(collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers() {\n    return (/** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */this.get(Property.LAYERS)\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState() {\n    return SourceState.READY;\n  };\n  return LayerGroup;\n}(BaseLayer);\nexport default LayerGroup;","map":{"version":3,"sources":["../../../src/ol/layer/Group.js"],"names":["const","let","super"],"mappings":"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","sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n"]},"metadata":{},"sourceType":"module"}