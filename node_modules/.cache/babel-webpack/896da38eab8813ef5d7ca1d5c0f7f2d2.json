{"ast":null,"code":"/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\nvar RenderEvent = /*@__PURE__*/function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n  }\n  if (Event) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create(Event && Event.prototype);\n  RenderEvent.prototype.constructor = RenderEvent;\n  return RenderEvent;\n}(Event);\nexport default RenderEvent;","map":{"version":3,"sources":["../../../src/ol/render/Event.js"],"names":["super"],"mappings":"AAAA;;;;AAIA,OAAO,KAAK,MAAM,oBAAoB;AAEtC,IAAM,WAAW,GAAc,aAAA,UAAA,KAAA,EAAA;EAS7B,SAAA,WAAW,CAAC,IAAI,EAAE,iBAAiB,EAAE,cAAc,EAAE,WAAW,EAAE,aAAa,EAAE;IAE/EA,KAAAA,CAAAA,IAAK,CAAA,IAAA,EAAC,IAAI,CAAC;;;;;;;IAOX,IAAI,CAAC,aAAa,GAAG,iBAAiB;;;;;;;IAOtC,IAAI,CAAC,UAAU,GAAG,cAAc;;;;;;;;IAQhC,IAAI,CAAC,OAAO,GAAG,WAAW;;;;;;;;IAQ1B,IAAI,CAAC,SAAS,GAAG,aAAa;;;;EAE/B,WAAA,CAAA,SAAA,CAAA,WAAA,GAAA,WAAA;;EA3CuB,KAAA,CAAA;AA+C1B,eAAe,WAAW","sourcesContent":["/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"./VectorContext.js\").default=} opt_vectorContext Vector context.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   * @param {?import(\"../webgl/Context.js\").default=} opt_glContext WebGL Context.\n   */\n  constructor(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    super(type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n}\n\nexport default RenderEvent;\n"]},"metadata":{},"sourceType":"module"}