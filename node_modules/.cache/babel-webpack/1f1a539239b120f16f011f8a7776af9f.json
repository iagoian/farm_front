{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var Subscriber = /*#__PURE__*/function (_Subscription) {\n  _inherits(Subscriber, _Subscription);\n  var _super = _createSuper(Subscriber);\n  function Subscriber(destinationOrNext, error, complete) {\n    var _this;\n    _classCallCheck(this, Subscriber);\n    _this = _super.call(this);\n    _this.syncErrorValue = null;\n    _this.syncErrorThrown = false;\n    _this.syncErrorThrowable = false;\n    _this.isStopped = false;\n    switch (arguments.length) {\n      case 0:\n        _this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          _this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            _this.destination = destinationOrNext;\n            destinationOrNext.add(_assertThisInitialized(_this));\n          } else {\n            _this.syncErrorThrowable = true;\n            _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext);\n          }\n          break;\n        }\n      default:\n        _this.syncErrorThrowable = true;\n        _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext, error, complete);\n        break;\n    }\n    return _this;\n  }\n  _createClass(Subscriber, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped) {\n        this._next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this._error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this._complete();\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.closed) {\n        return;\n      }\n      this.isStopped = true;\n      _get(_getPrototypeOf(Subscriber.prototype), \"unsubscribe\", this).call(this);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.destination.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.destination.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.destination.complete();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_unsubscribeAndRecycle\",\n    value: function _unsubscribeAndRecycle() {\n      var _parentOrParents = this._parentOrParents;\n      this._parentOrParents = null;\n      this.unsubscribe();\n      this.closed = false;\n      this.isStopped = false;\n      this._parentOrParents = _parentOrParents;\n      return this;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(next, error, complete) {\n      var subscriber = new Subscriber(next, error, complete);\n      subscriber.syncErrorThrowable = false;\n      return subscriber;\n    }\n  }]);\n  return Subscriber;\n}(Subscription);\nexport var SafeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SafeSubscriber, _Subscriber);\n  var _super2 = _createSuper(SafeSubscriber);\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    var _this2;\n    _classCallCheck(this, SafeSubscriber);\n    _this2 = _super2.call(this);\n    _this2._parentSubscriber = _parentSubscriber;\n    var next;\n    var context = _assertThisInitialized(_this2);\n    if (isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          _this2.add(context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = _this2.unsubscribe.bind(_assertThisInitialized(_this2));\n      }\n    }\n    _this2._context = context;\n    _this2._next = next;\n    _this2._error = error;\n    _this2._complete = complete;\n    return _this2;\n  }\n  _createClass(SafeSubscriber, [{\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped && this._next) {\n        var _parentSubscriber = this._parentSubscriber;\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._next, value);\n        } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n        var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n        if (this._error) {\n          if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(this._error, err);\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, this._error, err);\n            this.unsubscribe();\n          }\n        } else if (!_parentSubscriber.syncErrorThrowable) {\n          this.unsubscribe();\n          if (useDeprecatedSynchronousErrorHandling) {\n            throw err;\n          }\n          hostReportError(err);\n        } else {\n          if (useDeprecatedSynchronousErrorHandling) {\n            _parentSubscriber.syncErrorValue = err;\n            _parentSubscriber.syncErrorThrown = true;\n          } else {\n            hostReportError(err);\n          }\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _this3 = this;\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n        if (this._complete) {\n          var wrappedComplete = function wrappedComplete() {\n            return _this3._complete.call(_this3._context);\n          };\n          if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(wrappedComplete);\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n            this.unsubscribe();\n          }\n        } else {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrUnsub\",\n    value: function __tryOrUnsub(fn, value) {\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        this.unsubscribe();\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        } else {\n          hostReportError(err);\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrSetError\",\n    value: function __tryOrSetError(parent, fn, value) {\n      if (!config.useDeprecatedSynchronousErrorHandling) {\n        throw new Error('bad call');\n      }\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          parent.syncErrorValue = err;\n          parent.syncErrorThrown = true;\n          return true;\n        } else {\n          hostReportError(err);\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var _parentSubscriber = this._parentSubscriber;\n      this._context = null;\n      this._parentSubscriber = null;\n      _parentSubscriber.unsubscribe();\n    }\n  }]);\n  return SafeSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../src/internal/Subscriber.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n    constructor(destinationOrNext, error, complete) {\n        super();\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        destinationOrNext.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    _unsubscribeAndRecycle() {\n        const { _parentOrParents } = this;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscriber.js.map"]},"metadata":{},"sourceType":"module"}