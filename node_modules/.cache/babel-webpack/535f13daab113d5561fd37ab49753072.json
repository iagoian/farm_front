{"ast":null,"code":"import _classCallCheck from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Teste-Job-V2/Farm/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AsapScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AsapScheduler, _AsyncScheduler);\n  var _super = _createSuper(AsapScheduler);\n  function AsapScheduler() {\n    _classCallCheck(this, AsapScheduler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AsapScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this.active = true;\n      this.scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      var index = -1;\n      var count = actions.length;\n      action = action || actions.shift();\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while (++index < count && (action = actions.shift()));\n      this.active = false;\n      if (error) {\n        while (++index < count && (action = actions.shift())) {\n          action.unsubscribe();\n        }\n        throw error;\n      }\n    }\n  }]);\n  return AsapScheduler;\n}(AsyncScheduler);","map":{"version":3,"sources":["../../../src/internal/scheduler/AsapScheduler.ts"],"names":[],"mappings":";;;;AACA,SAAS,cAAc,QAAQ,kBAAkB;AAEjD,WAAa,aAAc;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAClB,eAAM,MAAyB,EAAA;MAEpC,IAAI,CAAC,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC,SAAS,GAAG,SAAS;MAE1B,IAAO,OAAO,GAAI,IAAI,CAAf,OAAO;MACd,IAAI,KAAU;MACd,IAAI,KAAK,GAAW,CAAC,CAAC;MACtB,IAAI,KAAK,GAAW,OAAO,CAAC,MAAM;MAClC,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAK,EAAE;MAElC,GAAG;QACD,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;UACtD;QACD;OACF,QAAQ,EAAE,KAAK,GAAG,KAAK,KAAK,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;MAEtD,IAAI,CAAC,MAAM,GAAG,KAAK;MAEnB,IAAI,KAAK,EAAE;QACT,OAAO,EAAE,KAAK,GAAG,KAAK,KAAK,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE;UACpD,MAAM,CAAC,WAAW,EAAE;QACrB;QACD,MAAM,KAAK;MACZ;IACH;EAAC;EAAA;AAAA,EA1BgC,cAAc","sourcesContent":["import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map"]},"metadata":{},"sourceType":"module"}