{"ast":null,"code":"/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/function (Control) {\n  function Zoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n    var delta = options.delta !== undefined ? options.delta : 1;\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : \"\\u2212\";\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ? options.zoomOutTipLabel : 'Zoom out';\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n  if (Control) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create(Control && Control.prototype);\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_(delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n  return Zoom;\n}(Control);\nexport default Zoom;","map":{"version":3,"sources":["../../../src/ol/control/Zoom.js"],"names":["const","super"],"mappings":"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","sourcesContent":["/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentResolution = view.getResolution();\n    if (currentResolution) {\n      const newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  }\n}\n\n\nexport default Zoom;\n"]},"metadata":{},"sourceType":"module"}