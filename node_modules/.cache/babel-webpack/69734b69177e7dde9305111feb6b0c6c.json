{"ast":null,"code":"import _assertThisInitialized from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\nexport var MapOperator = /*#__PURE__*/function () {\n  function MapOperator(project, thisArg) {\n    _classCallCheck(this, MapOperator);\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n  _createClass(MapOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n  }]);\n  return MapOperator;\n}();\nvar MapSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(MapSubscriber, _Subscriber);\n  var _super = _createSuper(MapSubscriber);\n  function MapSubscriber(destination, project, thisArg) {\n    var _this;\n    _classCallCheck(this, MapSubscriber);\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.count = 0;\n    _this.thisArg = thisArg || _assertThisInitialized(_this);\n    return _this;\n  }\n  _createClass(MapSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var result;\n      try {\n        result = this.project.call(this.thisArg, value, this.count++);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n      this.destination.next(result);\n    }\n  }]);\n  return MapSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/map.ts"],"names":[],"mappings":";;;;;AACA,SAAS,UAAU,QAAQ,eAAe;AA2C1C,OAAM,SAAU,GAAG,CAAO,OAAuC,EAAE,OAAa,EAAA;EAC9E,OAAO,SAAS,YAAY,CAAC,MAAqB,EAAA;IAChD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;MACjC,MAAM,IAAI,SAAS,CAAC,4DAA4D,CAAC;IAClF;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EACvD,CAAC;AACH;AAEA,WAAa,WAAW;EACtB,qBAAoB,OAAuC,EAAU,OAAY,EAAA;IAAA;IAA7D,IAAA,CAAA,OAAO,GAAP,OAAO;IAA0C,IAAA,CAAA,OAAO,GAAP,OAAO;EAC5E;EAAC;IAAA;IAAA,OAED,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpF;EAAC;EAAA;AAAA;AACF,IAOK,aAAoB;EAAA;EAAA;EAIxB,uBAAY,WAA0B,EAClB,OAAuC,EAC/C,OAAY,EAAA;IAAA;IAAA;IACtB,0BAAM,WAAW;IAFC,MAAA,OAAO,GAAP,OAAO;IAJ3B,MAAA,KAAK,GAAW,CAAC;IAOf,MAAK,OAAO,GAAG,OAAO,iCAAQ;IAAC;EACjC;EAAC;IAAA;IAAA,OAIS,eAAM,KAAQ,EAAA;MACtB,IAAI,MAAS;MACb,IAAI;QACF,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;OAC9D,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;QAC3B;MACD;MACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B;EAAC;EAAA;AAAA,EAtB+B,UAAa","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport class MapOperator {\n    constructor(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n}\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project, thisArg) {\n        super(destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=map.js.map"]},"metadata":{},"sourceType":"module"}