{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n  if (DragBox) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create(DragBox && DragBox.prototype);\n  DragZoom.prototype.constructor = DragZoom;\n  return DragZoom;\n}(DragBox);\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */map.getView();\n  var size = /** @type {!import(\"../size.js\").Size} */map.getSize();\n  var extent = this.getGeometry().getExtent();\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinate(getBottomLeft(extent)), map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\nexport default DragZoom;","map":{"version":3,"sources":["../../../src/ol/interaction/DragZoom.js"],"names":["const","super","let"],"mappings":"AAAA;;;AAGA,SAAQ,OAAO,QAAO,cAAc;AACpC,SAAQ,YAAY,QAAO,wBAAwB;AACnD,SAAQ,6BAA6B,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE,eAAe,QAAO,cAAc;AAClH,OAAO,OAAO,MAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;AA0BlC,IAAM,QAAQ,GAAgB,aAAA,UAAA,OAAA,EAAA;EAI5B,SAAA,QAAW,CAAC,WAAW,EAAE;IACvBA,IAAM,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,CAAA,CAAE;IAE9CA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,YAAY;IAEtEC,OAAAA,CAAAA,IAAK,CAAA,IAAA,EAAC;MACJ,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,aAAa;MAC7C,QAAQ,EAAE;KACX,CAAC;;;;;;IAMF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,KAAK,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,GAAG;;;;;;IAMxE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,KAAK,SAAS,GAAG,OAAO,CAAC,GAAG,GAAG,KAAK;;;;EAC5D,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,QAAA;;EA1BoB,OAAA,CAAA;;;;;AAiCvB,SAAS,QAAQ,GAAG;EAClBD,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;EACzBA,IAAM,IAAI,GAAA,4CAAiD,GAAG,CAAC,OAAO,EAAG;EACzEA,IAAM,IAAI,GAAA,yCAA8C,GAAG,CAAC,OAAO,EAAG;EACtEE,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE;EAE3C,IAAI,IAAI,CAAC,IAAI,EAAE;IACbF,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;IAC5CA,IAAM,cAAc,GAAG,6BAA6B,CAAC,CACnD,GAAG,CAAC,sBAAsB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EACjD,GAAG,CAAC,sBAAsB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnDA,IAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,IAAI,CAAC;IAEhE,eAAe,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,CAAC;IACtC,MAAM,GAAG,SAAS;EACnB;EAEDA,IAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CACzC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EAE5CE,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;EAC9B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;EAErC,IAAI,CAAC,OAAO,CAAC;IACX,UAAU,EAAE,UAAU;IACtB,MAAM,EAAE,MAAM;IACd,QAAQ,EAAE,IAAI,CAAC,SAAS;IACxB,MAAM,EAAE;GACT,CAAC;AACH;AAGD,eAAe,QAAQ","sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n"]},"metadata":{},"sourceType":"module"}