{"ast":null,"code":"import _inherits from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dev-faculdade/Portifolio/Testes-Job/farm_project/farm_front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n  var inclusive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate, inclusive));\n  };\n}\nvar TakeWhileOperator = /*#__PURE__*/function () {\n  function TakeWhileOperator(predicate, inclusive) {\n    _classCallCheck(this, TakeWhileOperator);\n    this.predicate = predicate;\n    this.inclusive = inclusive;\n  }\n  _createClass(TakeWhileOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n  }]);\n  return TakeWhileOperator;\n}();\nvar TakeWhileSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(TakeWhileSubscriber, _Subscriber);\n  var _super = _createSuper(TakeWhileSubscriber);\n  function TakeWhileSubscriber(destination, predicate, inclusive) {\n    var _this;\n    _classCallCheck(this, TakeWhileSubscriber);\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.inclusive = inclusive;\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(TakeWhileSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n      var result;\n      try {\n        result = this.predicate(value, this.index++);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n      this.nextOrComplete(value, result);\n    }\n  }, {\n    key: \"nextOrComplete\",\n    value: function nextOrComplete(value, predicateResult) {\n      var destination = this.destination;\n      if (Boolean(predicateResult)) {\n        destination.next(value);\n      } else {\n        if (this.inclusive) {\n          destination.next(value);\n        }\n        destination.complete();\n      }\n    }\n  }]);\n  return TakeWhileSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/takeWhile.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAU,QAAQ,eAAe;AAmD1C,OAAM,SAAU,SAAS,CACrB,SAA+C,EAC9B;EAAA,IAAjB,SAAS,uEAAG,KAAK;EACnB,OAAO,UAAC,MAAqB;IAAA,OAClB,MAAM,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;EAAA;AACrE;AAAC,IAEK,iBAAiB;EACrB,2BACY,SAA+C,EAC/C,SAAkB,EAAA;IAAA;IADlB,IAAA,CAAA,SAAS,GAAT,SAAS;IACT,IAAA,CAAA,SAAS,GAAT,SAAS;EAAY;EAAC;IAAA;IAAA,OAElC,cAAK,UAAyB,EAAE,MAAW,EAAA;MACzC,OAAO,MAAM,CAAC,SAAS,CACnB,IAAI,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1E;EAAC;EAAA;AAAA;AAAA,IAQG,mBAAuB;EAAA;EAAA;EAG3B,6BACI,WAA0B,EAClB,SAA+C,EAC/C,SAAkB,EAAA;IAAA;IAAA;IAC5B,0BAAM,WAAW;IAFP,MAAA,SAAS,GAAT,SAAS;IACT,MAAA,SAAS,GAAT,SAAS;IALb,MAAA,KAAK,GAAW,CAAC;IAAC;EAO1B;EAAC;IAAA;IAAA,OAES,eAAM,KAAQ,EAAA;MACtB,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW;MACpC,IAAI,MAAe;MACnB,IAAI;QACF,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;OAC7C,CAAC,OAAO,GAAG,EAAE;QACZ,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;QACtB;MACD;MACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC;IACpC;EAAC;IAAA;IAAA,OAEO,wBAAe,KAAQ,EAAE,eAAwB,EAAA;MACvD,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW;MACpC,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;QAC5B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;OACxB,MAAM;QACL,IAAI,IAAI,CAAC,SAAS,EAAE;UAClB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QACxB;QACD,WAAW,CAAC,QAAQ,EAAE;MACvB;IACH;EAAC;EAAA;AAAA,EAhCkC,UAAa","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map"]},"metadata":{},"sourceType":"module"}