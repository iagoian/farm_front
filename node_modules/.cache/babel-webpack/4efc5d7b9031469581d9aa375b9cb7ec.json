{"ast":null,"code":"import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    } else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}","map":{"version":3,"sources":["../../../src/internal/scheduled/scheduled.ts"],"names":[],"mappings":"AAAA,SAAS,kBAAkB,QAAQ,sBAAsB;AACzD,SAAS,eAAe,QAAQ,mBAAmB;AACnD,SAAS,aAAa,QAAQ,iBAAiB;AAC/C,SAAS,gBAAgB,QAAQ,oBAAoB;AAErD,SAAS,mBAAmB,QAAQ,6BAA6B;AACjE,SAAS,SAAS,QAAQ,mBAAmB;AAC7C,SAAS,WAAW,QAAQ,qBAAqB;AACjD,SAAS,UAAU,QAAQ,oBAAoB;AAa/C,OAAM,SAAU,SAAS,CAAI,KAAyB,EAAE,SAAwB,EAAA;EAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;IACjB,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;MAC9B,OAAO,kBAAkB,CAAC,KAAK,EAAE,SAAS,CAAC;KAC5C,MAAM,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;MAC3B,OAAO,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC;KACzC,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;MAC7B,OAAO,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC;KACvC,MAAO,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;MAC1D,OAAO,gBAAgB,CAAC,KAAK,EAAE,SAAS,CAAC;IAC1C;EACF;EAED,MAAM,IAAI,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,KAAK,IAAI,oBAAoB,CAAC;AACvF","sourcesContent":["import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map"]},"metadata":{},"sourceType":"module"}